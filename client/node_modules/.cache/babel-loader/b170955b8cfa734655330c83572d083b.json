{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/adamwatt/Desktop/JavaScriptProjects/React-practice/e-commerce/src/components/Product.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getSingleProduct, addProductToCart, removeProductFromCart } from \"../actions\";\nimport Loading from \"./Loading\";\nimport css from \"../css/product.css\";\n\nconst Product = props => {\n  _s();\n\n  const {\n    singleProduct\n  } = props;\n  const {\n    cartItems\n  } = props;\n  const {\n    id\n  } = props.match.params;\n  const [number, setNumber] = useState(1);\n  useEffect(() => {\n    props.getSingleProduct(id); // eslint-disable-next-line\n  }, []);\n\n  if (!singleProduct) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }, this);\n  }\n\n  const onSubmit = e => {\n    e.preventDefault(); //! this correctly maps over the cartItems and will console log the item has been added. However any attemps to add an else statement containing props.addProductToCart do no work\n    // cartItems.map((cartItem) => {\n    //   if (cartItem.id === singleProduct.id) {\n    //     return console.log(\"item is already in cart\");\n    //   }\n    // });\n\n    const checkCart = element => {\n      if (element.id === singleProduct.id) {\n        removeProductFromCart();\n      } else {\n        props.addProductToCart({ ...singleProduct,\n          quantity: number\n        });\n      }\n    };\n\n    cartItems.some(checkCart); //! This almost works but i cant quite get it correct.\n    // cartItems.some((cartItem) => {\n    //   if (cartItem.id === singleProduct.id) {\n    //     return cartItem;\n    //   }\n    // })\n    //   ? console.log(\"item in cart\")\n    //   : props.addProductToCart({ ...singleProduct, quantity: number });\n    //* this properly adds an item to the cartItems state with a quantity key and value. trying to rewrite to do a check if a item already exists inside the cart\n\n    props.addProductToCart({ ...singleProduct,\n      quantity: number\n    });\n  };\n\n  const onChange = e => {\n    setNumber(parseInt(e.target.value));\n  };\n\n  const increaseValue = () => {\n    setNumber(number + 1);\n  };\n\n  const decreaseValue = () => {\n    if (number === 0) {\n      setNumber(0);\n    } else {\n      setNumber(number - 1);\n    }\n  };\n\n  const renderProduct = () => {\n    const {\n      image,\n      title,\n      price,\n      description\n    } = singleProduct;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card mb-3\",\n      style: {\n        maxWidth: \"540px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row g-0\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: image,\n            alt: image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-8\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"card-title\",\n              children: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: /*#__PURE__*/_jsxDEV(\"small\", {\n                className: \"text-muted\",\n                children: [\"$\", price]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: onSubmit,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"btn-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-success\",\n                    children: \"Buy Now\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 94,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-info\",\n                    children: \"Add to cart\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  name: \"product\",\n                  className: \"card-input\",\n                  min: \"1\",\n                  type: \"number\",\n                  onChange: onChange,\n                  value: number\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => increaseValue(),\n                className: \"btn-increase\",\n                children: \"+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => decreaseValue(),\n                className: \"btn-decrease\",\n                children: \"-\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: renderProduct()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Product, \"9VpGhAAIUyvHE9bNkqGESSDw7F0=\");\n\n_c = Product;\n\nconst mapStateToProps = state => {\n  return {\n    singleProduct: state.singleProduct,\n    cartItems: state.cartItems\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getSingleProduct,\n  addProductToCart,\n  removeProductFromCart\n})(Product);\n\nvar _c;\n\n$RefreshReg$(_c, \"Product\");","map":{"version":3,"sources":["/Users/adamwatt/Desktop/JavaScriptProjects/React-practice/e-commerce/src/components/Product.js"],"names":["React","useEffect","useState","connect","getSingleProduct","addProductToCart","removeProductFromCart","Loading","css","Product","props","singleProduct","cartItems","id","match","params","number","setNumber","onSubmit","e","preventDefault","checkCart","element","quantity","some","onChange","parseInt","target","value","increaseValue","decreaseValue","renderProduct","image","title","price","description","maxWidth","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  getSingleProduct,\n  addProductToCart,\n  removeProductFromCart,\n} from \"../actions\";\nimport Loading from \"./Loading\";\n\nimport css from \"../css/product.css\";\n\nconst Product = (props) => {\n  const { singleProduct } = props;\n  const { cartItems } = props;\n  const { id } = props.match.params;\n\n  const [number, setNumber] = useState(1);\n\n  useEffect(() => {\n    props.getSingleProduct(id);\n    // eslint-disable-next-line\n  }, []);\n\n  if (!singleProduct) {\n    return <Loading />;\n  }\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    //! this correctly maps over the cartItems and will console log the item has been added. However any attemps to add an else statement containing props.addProductToCart do no work\n    // cartItems.map((cartItem) => {\n    //   if (cartItem.id === singleProduct.id) {\n    //     return console.log(\"item is already in cart\");\n    //   }\n    // });\n\n    const checkCart = (element) => {\n      if (element.id === singleProduct.id) {\n        removeProductFromCart();\n      } else {\n        props.addProductToCart({ ...singleProduct, quantity: number });\n      }\n    };\n    cartItems.some(checkCart);\n    //! This almost works but i cant quite get it correct.\n    // cartItems.some((cartItem) => {\n    //   if (cartItem.id === singleProduct.id) {\n    //     return cartItem;\n    //   }\n    // })\n    //   ? console.log(\"item in cart\")\n    //   : props.addProductToCart({ ...singleProduct, quantity: number });\n\n    //* this properly adds an item to the cartItems state with a quantity key and value. trying to rewrite to do a check if a item already exists inside the cart\n    props.addProductToCart({ ...singleProduct, quantity: number });\n  };\n\n  const onChange = (e) => {\n    setNumber(parseInt(e.target.value));\n  };\n\n  const increaseValue = () => {\n    setNumber(number + 1);\n  };\n\n  const decreaseValue = () => {\n    if (number === 0) {\n      setNumber(0);\n    } else {\n      setNumber(number - 1);\n    }\n  };\n\n  const renderProduct = () => {\n    const { image, title, price, description } = singleProduct;\n\n    return (\n      <div className='card mb-3' style={{ maxWidth: \"540px\" }}>\n        <div className='row g-0'>\n          <div className='col-md-4'>\n            <img src={image} alt={image} />\n          </div>\n          <div className='col-md-8'>\n            <div className='card-body'>\n              <h5 className='card-title'>{title}</h5>\n              <p className='card-text'>{description}</p>\n              <p className='card-text'>\n                <small className='text-muted'>${price}</small>\n              </p>\n              <div>\n                <form onSubmit={onSubmit}>\n                  <div className='btn-group'>\n                    <button className='btn btn-success'>Buy Now</button>\n                    <button className='btn btn-info'>Add to cart</button>\n                  </div>\n                  <input\n                    name='product'\n                    className='card-input'\n                    min='1'\n                    type='number'\n                    onChange={onChange}\n                    value={number}\n                  />\n                </form>\n\n                <button\n                  onClick={() => increaseValue()}\n                  className='btn-increase'>\n                  +\n                </button>\n                <button\n                  onClick={() => decreaseValue()}\n                  className='btn-decrease'>\n                  -\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  return <div className='container'>{renderProduct()}</div>;\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    singleProduct: state.singleProduct,\n    cartItems: state.cartItems,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getSingleProduct,\n  addProductToCart,\n  removeProductFromCart,\n})(Product);\n"]},"metadata":{},"sourceType":"module"}