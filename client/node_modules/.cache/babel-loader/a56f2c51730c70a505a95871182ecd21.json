{"ast":null,"code":"import { ADD_CART_ITEM, REMOVE_CART_ITEM, UPDATE_QUANTITY, CART_ITEM_CHECK } from \"../types\";\n\nconst cartItemReducer = (state = [], action) => {\n  switch (action.type) {\n    case ADD_CART_ITEM:\n      return [...state, action.payload];\n\n    case REMOVE_CART_ITEM:\n      return state.filter(item => item.id !== action.payload);\n\n    case CART_ITEM_CHECK:\n      return state;\n\n    case UPDATE_QUANTITY:\n      //!action.payload currently coming in is the quantity number coming in. it can't be used to match to item.id\n      //? i want to add into the object i find { quantity: action.payload }\n      //? something like\n      //?  state\n      //? .map( item => ( {..item, quantity: action.payload} ) )\n      const checkQuantity = item => item.id === 1;\n\n      return state.some(checkQuantity, { ...item,\n        quantity: action.payload\n      });\n    // ? [...state, { quantity: action.payload }]\n    // : state;\n    //! this returns state.some().map is not a function\n    // return state\n    //   .some(checkQuantity)\n    //   .map((item) => ({ ...item, quantity: action.payload }));\n\n    default:\n      return state;\n  }\n};\n\nexport default cartItemReducer;","map":{"version":3,"sources":["/Users/adamwatt/Desktop/JavaScriptProjects/React-practice/e-commerce/src/reducers/cartItemReducer.js"],"names":["ADD_CART_ITEM","REMOVE_CART_ITEM","UPDATE_QUANTITY","CART_ITEM_CHECK","cartItemReducer","state","action","type","payload","filter","item","id","checkQuantity","some","quantity"],"mappings":"AAAA,SACEA,aADF,EAEEC,gBAFF,EAGEC,eAHF,EAIEC,eAJF,QAKO,UALP;;AAOA,MAAMC,eAAe,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,aAAL;AACE,aAAO,CAAC,GAAGK,KAAJ,EAAWC,MAAM,CAACE,OAAlB,CAAP;;AACF,SAAKP,gBAAL;AACE,aAAOI,KAAK,CAACI,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACE,OAA1C,CAAP;;AACF,SAAKL,eAAL;AACE,aAAOE,KAAP;;AACF,SAAKH,eAAL;AACE;AACA;AACA;AACA;AACA;AACA,YAAMU,aAAa,GAAIF,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAY,CAA5C;;AACA,aAAON,KAAK,CAACQ,IAAN,CAAWD,aAAX,EAA0B,EAAE,GAAGF,IAAL;AAAWI,QAAAA,QAAQ,EAAER,MAAM,CAACE;AAA5B,OAA1B,CAAP;AACF;AACA;AACA;AACA;AACA;AACA;;AACA;AACE,aAAOH,KAAP;AAtBJ;AAwBD,CAzBD;;AA2BA,eAAeD,eAAf","sourcesContent":["import {\n  ADD_CART_ITEM,\n  REMOVE_CART_ITEM,\n  UPDATE_QUANTITY,\n  CART_ITEM_CHECK,\n} from \"../types\";\n\nconst cartItemReducer = (state = [], action) => {\n  switch (action.type) {\n    case ADD_CART_ITEM:\n      return [...state, action.payload];\n    case REMOVE_CART_ITEM:\n      return state.filter((item) => item.id !== action.payload);\n    case CART_ITEM_CHECK:\n      return state;\n    case UPDATE_QUANTITY:\n      //!action.payload currently coming in is the quantity number coming in. it can't be used to match to item.id\n      //? i want to add into the object i find { quantity: action.payload }\n      //? something like\n      //?  state\n      //? .map( item => ( {..item, quantity: action.payload} ) )\n      const checkQuantity = (item) => item.id === 1;\n      return state.some(checkQuantity, { ...item, quantity: action.payload });\n    // ? [...state, { quantity: action.payload }]\n    // : state;\n    //! this returns state.some().map is not a function\n    // return state\n    //   .some(checkQuantity)\n    //   .map((item) => ({ ...item, quantity: action.payload }));\n    default:\n      return state;\n  }\n};\n\nexport default cartItemReducer;\n"]},"metadata":{},"sourceType":"module"}