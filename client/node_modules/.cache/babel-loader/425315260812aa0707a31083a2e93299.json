{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/adamwatt/Desktop/JavaScriptProjects/React-practice/e-commerce/src/components/ShoppingCartCard.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { createRef } from \"react\";\nimport { useRef, useMemo } from \"react\";\nimport { connect } from \"react-redux\"; // eslint-disable-next-line\n\nimport css from \"../css/shoppingCartCard.css\";\n\nconst ShoppingCartCard = ({\n  cartItems\n}) => {\n  _s2();\n\n  //! this might be only creating one ref and attaching that same ref to all the cards. all those refs though only refer to the same element which is the last item in the nodeList of cards.\n  //? solution to this problem might be to create an array of refs and apply those refs to the array of cards being created\n  const ref = useRef(null);\n  const refs = useMemo(() => {\n    var _s = $RefreshSig$();\n\n    return Array.from(cartItems.length).map(_s(() => {\n      _s();\n\n      return useRef(\"hi\");\n    }, \"J9pzIsEOVEZ74gjFtMkCj+5Po7s=\"));\n  }, []); // const refs = Array.from(cartItems.length, (a) => useRef(null));\n\n  const onClick = () => {\n    console.log(ref.current);\n  };\n\n  const handleClick = () => {// console.log(ref.current.getAttribute(\"value\"));\n    // console.log(ref.current);\n  };\n\n  const renderItems = () => {\n    return cartItems.map((cartItem, i) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        // onClick={handleClick}\n        // ref={(ref) => {\n        //   ref.current.push(ref);\n        // }}\n        ref: refs[i],\n        value: cartItem.id,\n        className: \"cart-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cart-card-img\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: cartItem.image,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cart-card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: cartItem.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"$\", cartItem.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Quantity: \", cartItem.quantity]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              children: \"Update Quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: onClick,\n              className: \"btn btn-danger\",\n              children: \"Delete From Cart\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, cartItem.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: renderItems()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 10\n  }, this);\n};\n\n_s2(ShoppingCartCard, \"YUcPWCSbubSyd6oESEh10BtI+eM=\");\n\n_c = ShoppingCartCard;\n\nconst mapStateToProps = state => {\n  return {\n    cartItems: state.cartItems\n  };\n};\n\nexport default connect(mapStateToProps)(ShoppingCartCard);\n\nvar _c;\n\n$RefreshReg$(_c, \"ShoppingCartCard\");","map":{"version":3,"sources":["/Users/adamwatt/Desktop/JavaScriptProjects/React-practice/e-commerce/src/components/ShoppingCartCard.js"],"names":["React","createRef","useRef","useMemo","connect","css","ShoppingCartCard","cartItems","ref","refs","Array","from","length","map","onClick","console","log","current","handleClick","renderItems","cartItem","i","id","image","title","price","quantity","mapStateToProps","state"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;;AACA,OAAOC,GAAP,MAAgB,6BAAhB;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AAAA;;AAC1C;AACA;AACA,QAAMC,GAAG,GAAGN,MAAM,CAAC,IAAD,CAAlB;AAEA,QAAMO,IAAI,GAAGN,OAAO,CAClB;AAAA;;AAAA,WAAMO,KAAK,CAACC,IAAN,CAAWJ,SAAS,CAACK,MAArB,EAA6BC,GAA7B,IAAiC;AAAA;;AAAA,aAAMX,MAAM,CAAC,IAAD,CAAZ;AAAA,KAAjC,kCAAN;AAAA,GADkB,EAElB,EAFkB,CAApB,CAL0C,CAU1C;;AAEA,QAAMY,OAAO,GAAG,MAAM;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAYR,GAAG,CAACS,OAAhB;AACD,GAFD;;AAIA,QAAMC,WAAW,GAAG,MAAM,CACxB;AACA;AACD,GAHD;;AAKA,QAAMC,WAAW,GAAG,MAAM;AACxB,WAAOZ,SAAS,CAACM,GAAV,CAAc,CAACO,QAAD,EAAWC,CAAX,KAAiB;AACpC,0BACE;AACE;AACA;AACA;AACA;AACA,QAAA,GAAG,EAAEZ,IAAI,CAACY,CAAD,CALX;AAOE,QAAA,KAAK,EAAED,QAAQ,CAACE,EAPlB;AAQE,QAAA,SAAS,EAAC,WARZ;AAAA,gCASE;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,iCACE;AAAK,YAAA,GAAG,EAAEF,QAAQ,CAACG,KAAnB;AAA0B,YAAA,GAAG,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBATF,eAYE;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,kCACE;AAAA,sBAAKH,QAAQ,CAACI;AAAd;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,4BAAKJ,QAAQ,CAACK,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA,qCAAcL,QAAQ,CAACM,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAK,YAAA,SAAS,EAAC,cAAf;AAAA,oCACE;AAAQ,cAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAQ,cAAA,OAAO,EAAEZ,OAAjB;AAA0B,cAAA,SAAS,EAAC,gBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZF;AAAA,SAMOM,QAAQ,CAACE,EANhB;AAAA;AAAA;AAAA;AAAA,cADF;AA0BD,KA3BM,CAAP;AA4BD,GA7BD;;AA+BA,sBAAO;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,cAA4BH,WAAW;AAAvC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CArDD;;IAAMb,gB;;KAAAA,gB;;AAuDN,MAAMqB,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLrB,IAAAA,SAAS,EAAEqB,KAAK,CAACrB;AADZ,GAAP;AAGD,CAJD;;AAMA,eAAeH,OAAO,CAACuB,eAAD,CAAP,CAAyBrB,gBAAzB,CAAf","sourcesContent":["import React, { createRef } from \"react\";\nimport { useRef, useMemo } from \"react\";\nimport { connect } from \"react-redux\";\n\n// eslint-disable-next-line\nimport css from \"../css/shoppingCartCard.css\";\n\nconst ShoppingCartCard = ({ cartItems }) => {\n  //! this might be only creating one ref and attaching that same ref to all the cards. all those refs though only refer to the same element which is the last item in the nodeList of cards.\n  //? solution to this problem might be to create an array of refs and apply those refs to the array of cards being created\n  const ref = useRef(null);\n\n  const refs = useMemo(\n    () => Array.from(cartItems.length).map(() => useRef(\"hi\")),\n    []\n  );\n\n  // const refs = Array.from(cartItems.length, (a) => useRef(null));\n\n  const onClick = () => {\n    console.log(ref.current);\n  };\n\n  const handleClick = () => {\n    // console.log(ref.current.getAttribute(\"value\"));\n    // console.log(ref.current);\n  };\n\n  const renderItems = () => {\n    return cartItems.map((cartItem, i) => {\n      return (\n        <div\n          // onClick={handleClick}\n          // ref={(ref) => {\n          //   ref.current.push(ref);\n          // }}\n          ref={refs[i]}\n          key={cartItem.id}\n          value={cartItem.id}\n          className='cart-card'>\n          <div className='cart-card-img'>\n            <img src={cartItem.image} alt='' />\n          </div>\n          <div className='cart-card-body'>\n            <h5>{cartItem.title}</h5>\n            <p>${cartItem.price}</p>\n            <p>Quantity: {cartItem.quantity}</p>\n            <div className='button-group'>\n              <button className='btn btn-primary'>Update Quantity</button>\n              <button onClick={onClick} className='btn btn-danger'>\n                Delete From Cart\n              </button>\n            </div>\n          </div>\n        </div>\n      );\n    });\n  };\n\n  return <div className='container'>{renderItems()}</div>;\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    cartItems: state.cartItems,\n  };\n};\n\nexport default connect(mapStateToProps)(ShoppingCartCard);\n"]},"metadata":{},"sourceType":"module"}