{"ast":null,"code":"import _ from \"lodash\";\nimport { ADD_CART_ITEM, REMOVE_CART_ITEM, UPDATE_QUANTITY, CART_ITEM_CHECK, CART_ERROR, LOAD_USER_CART, LOGOUT } from \"../types\";\nconst initialState = {\n  cart: [],\n  error: null\n};\n\nconst cartItemReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_CART_ITEM:\n      return { ...state,\n        cart: [...state.cart, action.payload]\n      };\n\n    case LOAD_USER_CART:\n      return { ...state,\n        cart: action.payload\n      };\n\n    case REMOVE_CART_ITEM:\n      return { ...state,\n        cart: state.cart.filter(item => item.id !== action.payload)\n      };\n\n    case CART_ITEM_CHECK:\n      return state;\n\n    case UPDATE_QUANTITY:\n      const foundItem = _.find(state.cart, {\n        id: action.payload.id\n      });\n\n      const updatedItem = { ...foundItem,\n        quantity: action.payload.quantity\n      };\n      const filteredState = state.cart.filter(item => item.id !== action.payload.id);\n      return { ...state,\n        cart: [...filteredState, updatedItem]\n      };\n\n    case CART_ERROR:\n      return { ...state,\n        error: action.payload\n      };\n\n    case LOGOUT:\n      return { ...state,\n        cart: []\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default cartItemReducer;","map":{"version":3,"sources":["/Users/adamwatt/Desktop/JavaScriptProjects/React-practice/e-commerce/client/src/reducers/cartItemReducer.js"],"names":["_","ADD_CART_ITEM","REMOVE_CART_ITEM","UPDATE_QUANTITY","CART_ITEM_CHECK","CART_ERROR","LOAD_USER_CART","LOGOUT","initialState","cart","error","cartItemReducer","state","action","type","payload","filter","item","id","foundItem","find","updatedItem","quantity","filteredState"],"mappings":"AAAA,OAAOA,CAAP,MAAc,QAAd;AAEA,SACEC,aADF,EAEEC,gBAFF,EAGEC,eAHF,EAIEC,eAJF,EAKEC,UALF,EAMEC,cANF,EAOEC,MAPF,QAQO,UARP;AAUA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,EADa;AAEnBC,EAAAA,KAAK,EAAE;AAFY,CAArB;;AAKA,MAAMC,eAAe,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AACxD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKb,aAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELH,QAAAA,IAAI,EAAE,CAAC,GAAGG,KAAK,CAACH,IAAV,EAAgBI,MAAM,CAACE,OAAvB;AAFD,OAAP;;AAIF,SAAKT,cAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELH,QAAAA,IAAI,EAAEI,MAAM,CAACE;AAFR,OAAP;;AAIF,SAAKb,gBAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELH,QAAAA,IAAI,EAAEG,KAAK,CAACH,IAAN,CAAWO,MAAX,CAAmBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACE,OAA/C;AAFD,OAAP;;AAIF,SAAKX,eAAL;AACE,aAAOQ,KAAP;;AACF,SAAKT,eAAL;AACE,YAAMgB,SAAS,GAAGnB,CAAC,CAACoB,IAAF,CAAOR,KAAK,CAACH,IAAb,EAAmB;AAAES,QAAAA,EAAE,EAAEL,MAAM,CAACE,OAAP,CAAeG;AAArB,OAAnB,CAAlB;;AACA,YAAMG,WAAW,GAAG,EAAE,GAAGF,SAAL;AAAgBG,QAAAA,QAAQ,EAAET,MAAM,CAACE,OAAP,CAAeO;AAAzC,OAApB;AACA,YAAMC,aAAa,GAAGX,KAAK,CAACH,IAAN,CAAWO,MAAX,CACnBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACE,OAAP,CAAeG,EADjB,CAAtB;AAGA,aAAO,EACL,GAAGN,KADE;AAELH,QAAAA,IAAI,EAAE,CAAC,GAAGc,aAAJ,EAAmBF,WAAnB;AAFD,OAAP;;AAIF,SAAKhB,UAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELF,QAAAA,KAAK,EAAEG,MAAM,CAACE;AAFT,OAAP;;AAIF,SAAKR,MAAL;AACE,aAAO,EACL,GAAGK,KADE;AAELH,QAAAA,IAAI,EAAE;AAFD,OAAP;;AAIF;AACE,aAAOG,KAAP;AAvCJ;AAyCD,CA1CD;;AA4CA,eAAeD,eAAf","sourcesContent":["import _ from \"lodash\";\n\nimport {\n  ADD_CART_ITEM,\n  REMOVE_CART_ITEM,\n  UPDATE_QUANTITY,\n  CART_ITEM_CHECK,\n  CART_ERROR,\n  LOAD_USER_CART,\n  LOGOUT,\n} from \"../types\";\n\nconst initialState = {\n  cart: [],\n  error: null,\n};\n\nconst cartItemReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_CART_ITEM:\n      return {\n        ...state,\n        cart: [...state.cart, action.payload],\n      };\n    case LOAD_USER_CART:\n      return {\n        ...state,\n        cart: action.payload,\n      };\n    case REMOVE_CART_ITEM:\n      return {\n        ...state,\n        cart: state.cart.filter((item) => item.id !== action.payload),\n      };\n    case CART_ITEM_CHECK:\n      return state;\n    case UPDATE_QUANTITY:\n      const foundItem = _.find(state.cart, { id: action.payload.id });\n      const updatedItem = { ...foundItem, quantity: action.payload.quantity };\n      const filteredState = state.cart.filter(\n        (item) => item.id !== action.payload.id\n      );\n      return {\n        ...state,\n        cart: [...filteredState, updatedItem],\n      };\n    case CART_ERROR:\n      return {\n        ...state,\n        error: action.payload,\n      };\n    case LOGOUT:\n      return {\n        ...state,\n        cart: [],\n      };\n    default:\n      return state;\n  }\n};\n\nexport default cartItemReducer;\n"]},"metadata":{},"sourceType":"module"}