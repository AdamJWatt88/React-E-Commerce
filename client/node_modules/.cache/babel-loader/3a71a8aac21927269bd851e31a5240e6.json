{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/adamwatt/Desktop/JavaScriptProjects/React-practice/e-commerce/src/components/StoreGrid.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getThumbNails } from \"../actions\";\n\nconst StoreGrid = ({\n  getThumbNails,\n  thumbNails\n}) => {\n  _s();\n\n  useEffect(() => {\n    getThumbNails();\n  }, []); //  this logic works and is commmented out to rework into Redux store\n  // const [images, setImage] = useState([]);\n  // useEffect(() => {\n  //   fetch(\"https://jsonplaceholder.typicode.com/photos/\")\n  //     .then((response) => response.json())\n  //     .then((data) => {\n  // this filters out the albumId of 1, maps over them and sets the state to an array of the thumbnailUrl and id\n  //       const albumArr = data\n  //         .filter((album) => album.albumId === 1)\n  //         .map((photo) => {\n  //           return { image: photo.thumbnailUrl, id: photo.id };\n  //         });\n  //       setImage(albumArr);\n  //     });\n  // }, []);\n\n  const renderImages = () => {\n    return thumbNails.map(photo => {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: photo.image,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 14\n      }, this);\n    });\n  }; // console.log(testAction(\"cheese\"));\n\n\n  console.log(thumbNails);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: renderImages()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 10\n  }, this);\n};\n\n_s(StoreGrid, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = StoreGrid;\n\nconst mapStateToProps = state => {\n  return {\n    thumbNails: state.thumbNails\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getThumbNails\n})(StoreGrid);\n\nvar _c;\n\n$RefreshReg$(_c, \"StoreGrid\");","map":{"version":3,"sources":["/Users/adamwatt/Desktop/JavaScriptProjects/React-practice/e-commerce/src/components/StoreGrid.js"],"names":["React","useEffect","connect","getThumbNails","StoreGrid","thumbNails","renderImages","map","photo","image","console","log","mapStateToProps","state"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,QAA8B,YAA9B;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAED,EAAAA,aAAF;AAAiBE,EAAAA;AAAjB,CAAD,KAAmC;AAAA;;AACnDJ,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,aAAa;AACd,GAFQ,EAEN,EAFM,CAAT,CADmD,CAInD;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA,QAAMG,YAAY,GAAG,MAAM;AACzB,WAAOD,UAAU,CAACE,GAAX,CAAgBC,KAAD,IAAW;AAC/B,0BAAO;AAAK,QAAA,GAAG,EAAEA,KAAK,CAACC,KAAhB;AAAuB,QAAA,GAAG,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFM,CAAP;AAGD,GAJD,CAtBmD,CA2BnD;;;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,UAAZ;AAEA,sBAAO;AAAA,cAAMC,YAAY;AAAlB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CA/BD;;GAAMF,S;;KAAAA,S;;AAiCN,MAAMQ,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLR,IAAAA,UAAU,EAAEQ,KAAK,CAACR;AADb,GAAP;AAGD,CAJD;;AAMA,eAAeH,OAAO,CAACU,eAAD,EAAkB;AACtCT,EAAAA;AADsC,CAAlB,CAAP,CAEZC,SAFY,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getThumbNails } from \"../actions\";\n\nconst StoreGrid = ({ getThumbNails, thumbNails }) => {\n  useEffect(() => {\n    getThumbNails();\n  }, []);\n  //  this logic works and is commmented out to rework into Redux store\n  // const [images, setImage] = useState([]);\n\n  // useEffect(() => {\n  //   fetch(\"https://jsonplaceholder.typicode.com/photos/\")\n  //     .then((response) => response.json())\n  //     .then((data) => {\n  // this filters out the albumId of 1, maps over them and sets the state to an array of the thumbnailUrl and id\n  //       const albumArr = data\n  //         .filter((album) => album.albumId === 1)\n  //         .map((photo) => {\n  //           return { image: photo.thumbnailUrl, id: photo.id };\n  //         });\n\n  //       setImage(albumArr);\n  //     });\n  // }, []);\n\n  const renderImages = () => {\n    return thumbNails.map((photo) => {\n      return <img src={photo.image} alt='' />;\n    });\n  };\n  // console.log(testAction(\"cheese\"));\n  console.log(thumbNails);\n\n  return <div>{renderImages()}</div>;\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    thumbNails: state.thumbNails,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getThumbNails,\n})(StoreGrid);\n"]},"metadata":{},"sourceType":"module"}