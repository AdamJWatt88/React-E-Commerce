{"ast":null,"code":"import { FETCH_PRODUCT, FETCH_PRODUCTS, FETCH_CATEGORY, SET_SLIDE_MENU, CATEGORY_SELECTIONS } from \"../types\"; //get all products\n\nexport const getProducts = categories => {\n  return async dispatch => {\n    const response = await fetch(\"https://fakestoreapi.com/products\");\n    const data = await response.json();\n    dispatch({\n      type: FETCH_PRODUCTS,\n      payload: data\n    });\n  };\n}; // fetch products by category\n\nexport const getCategory = category => {\n  return async dispatch => {\n    const response = await fetch(`https://fakestoreapi.com/products/category/${category}`);\n    const data = await response.json();\n    dispatch({\n      type: FETCH_CATEGORY,\n      payload: data\n    });\n  };\n};\nexport const getSingleProduct = id => {\n  return async dispatch => {\n    const response = await fetch(`https://fakestoreapi.com/products/:${id}`);\n    const data = await response.json();\n    dispatch({\n      type: FETCH_SINGLE_PRODUCT,\n      payload: data\n    });\n  };\n}; //map over the formProps obejct being passed in here and take every category value then assign an array made of those values to payload value\n\nexport const categorySelection = formProps => {\n  // only add formProps value to the array if not null. if a value is null then remove it\n  const formValues = Object.values(formProps).filter(item => item !== null);\n  return {\n    type: CATEGORY_SELECTIONS,\n    payload: formValues\n  };\n}; //open and close the slideMenu if true or false\n\nexport const showSlideMenu = () => {\n  return {\n    type: SET_SLIDE_MENU\n  };\n};","map":{"version":3,"sources":["/Users/adamwatt/Desktop/JavaScriptProjects/React-practice/e-commerce/src/actions/index.js"],"names":["FETCH_PRODUCT","FETCH_PRODUCTS","FETCH_CATEGORY","SET_SLIDE_MENU","CATEGORY_SELECTIONS","getProducts","categories","dispatch","response","fetch","data","json","type","payload","getCategory","category","getSingleProduct","id","FETCH_SINGLE_PRODUCT","categorySelection","formProps","formValues","Object","values","filter","item","showSlideMenu"],"mappings":"AAAA,SACEA,aADF,EAEEC,cAFF,EAGEC,cAHF,EAIEC,cAJF,EAKEC,mBALF,QAMO,UANP,C,CAQA;;AACA,OAAO,MAAMC,WAAW,GAAIC,UAAD,IAAgB;AACzC,SAAO,MAAOC,QAAP,IAAoB;AACzB,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAD,CAA5B;AACA,UAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AAEAJ,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAEX,cADC;AAEPY,MAAAA,OAAO,EAAEH;AAFF,KAAD,CAAR;AAID,GARD;AASD,CAVM,C,CAYP;;AACA,OAAO,MAAMI,WAAW,GAAIC,QAAD,IAAc;AACvC,SAAO,MAAOR,QAAP,IAAoB;AACzB,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,8CAA6CM,QAAS,EAD7B,CAA5B;AAGA,UAAML,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AAEAJ,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAEV,cADC;AAEPW,MAAAA,OAAO,EAAEH;AAFF,KAAD,CAAR;AAID,GAVD;AAWD,CAZM;AAcP,OAAO,MAAMM,gBAAgB,GAAIC,EAAD,IAAQ;AACtC,SAAO,MAAOV,QAAP,IAAoB;AACzB,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,sCAAqCQ,EAAG,EAA1C,CAA5B;AACA,UAAMP,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AAEAJ,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAEM,oBADC;AAEPL,MAAAA,OAAO,EAAEH;AAFF,KAAD,CAAR;AAID,GARD;AASD,CAVM,C,CAYP;;AACA,OAAO,MAAMS,iBAAiB,GAAIC,SAAD,IAAe;AAC9C;AACA,QAAMC,UAAU,GAAGC,MAAM,CAACC,MAAP,CAAcH,SAAd,EAAyBI,MAAzB,CAAiCC,IAAD,IAAUA,IAAI,KAAK,IAAnD,CAAnB;AAEA,SAAO;AACLb,IAAAA,IAAI,EAAER,mBADD;AAELS,IAAAA,OAAO,EAAEQ;AAFJ,GAAP;AAID,CARM,C,CAUP;;AACA,OAAO,MAAMK,aAAa,GAAG,MAAM;AACjC,SAAO;AACLd,IAAAA,IAAI,EAAET;AADD,GAAP;AAGD,CAJM","sourcesContent":["import {\n  FETCH_PRODUCT,\n  FETCH_PRODUCTS,\n  FETCH_CATEGORY,\n  SET_SLIDE_MENU,\n  CATEGORY_SELECTIONS,\n} from \"../types\";\n\n//get all products\nexport const getProducts = (categories) => {\n  return async (dispatch) => {\n    const response = await fetch(\"https://fakestoreapi.com/products\");\n    const data = await response.json();\n\n    dispatch({\n      type: FETCH_PRODUCTS,\n      payload: data,\n    });\n  };\n};\n\n// fetch products by category\nexport const getCategory = (category) => {\n  return async (dispatch) => {\n    const response = await fetch(\n      `https://fakestoreapi.com/products/category/${category}`\n    );\n    const data = await response.json();\n\n    dispatch({\n      type: FETCH_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const getSingleProduct = (id) => {\n  return async (dispatch) => {\n    const response = await fetch(`https://fakestoreapi.com/products/:${id}`);\n    const data = await response.json();\n\n    dispatch({\n      type: FETCH_SINGLE_PRODUCT,\n      payload: data,\n    });\n  };\n};\n\n//map over the formProps obejct being passed in here and take every category value then assign an array made of those values to payload value\nexport const categorySelection = (formProps) => {\n  // only add formProps value to the array if not null. if a value is null then remove it\n  const formValues = Object.values(formProps).filter((item) => item !== null);\n\n  return {\n    type: CATEGORY_SELECTIONS,\n    payload: formValues,\n  };\n};\n\n//open and close the slideMenu if true or false\nexport const showSlideMenu = () => {\n  return {\n    type: SET_SLIDE_MENU,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}