{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/adamwatt/Desktop/JavaScriptProjects/React-practice/e-commerce/src/components/SlideMenu.js\";\nimport React, { Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { categorySelection } from \"../actions\"; // eslint-disable-next-line\n\nimport css from \"../css/slideMenu.css\";\n\nconst SlideMenu = ({\n  openOrClosed,\n  handleSubmit,\n  productCategories,\n  categorySelection\n}) => {\n  const renderInput = () => {\n    return productCategories.map((category, index) => {\n      return (\n        /*#__PURE__*/\n        // <div className='checkbox' key={index}>\n        _jsxDEV(Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            name: category.category,\n            component: \"input\",\n            className: \"form-check-input\",\n            type: \"checkbox\",\n            format: v => v === `${category.value}` // converts redux state string to boolean\n            ,\n            normalize: v => v ? `${category.value}` : null // converts checkbox boolean to string\n            // value={category.category}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-check-label\",\n            htmlFor: \"flexCheckDefault\",\n            children: category.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 9\n        }, this) // </div>\n\n      );\n    });\n  }; // send the formProps object over to state where in the Object.values(formProps) turns the formProps object's values into an array\n\n\n  const submitHandler = formProps => {\n    categorySelection(formProps);\n  };\n\n  const toggleMenu = () => {\n    if (!openOrClosed) {\n      return \"slide-menu\";\n    } else {\n      return \"slide-menu open\";\n    }\n  };\n\n  const toggle = toggleMenu();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${toggle} container--flex`,\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Filter By Category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(submitHandler),\n      children: [renderInput(), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn--secondary\",\n        children: \"Apply Filter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_c = SlideMenu;\n\nconst mapStateToProps = state => {\n  return {\n    productCategories: state.productCategories,\n    openOrClosed: state.openOrClosed\n  };\n};\n\nconst slideMenu = connect(mapStateToProps, {\n  categorySelection\n})(SlideMenu);\nexport default reduxForm({\n  form: \"slideMenu\"\n})(slideMenu);\n\nvar _c;\n\n$RefreshReg$(_c, \"SlideMenu\");","map":{"version":3,"sources":["/Users/adamwatt/Desktop/JavaScriptProjects/React-practice/e-commerce/src/components/SlideMenu.js"],"names":["React","Fragment","connect","Field","reduxForm","categorySelection","css","SlideMenu","openOrClosed","handleSubmit","productCategories","renderInput","map","category","index","v","value","submitHandler","formProps","toggleMenu","toggle","mapStateToProps","state","slideMenu","form"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;AACA,SAASC,iBAAT,QAAkC,YAAlC,C,CAEA;;AACA,OAAOC,GAAP,MAAgB,sBAAhB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AACjBC,EAAAA,YADiB;AAEjBC,EAAAA,YAFiB;AAGjBC,EAAAA,iBAHiB;AAIjBL,EAAAA;AAJiB,CAAD,KAKZ;AACJ,QAAMM,WAAW,GAAG,MAAM;AACxB,WAAOD,iBAAiB,CAACE,GAAlB,CAAsB,CAACC,QAAD,EAAWC,KAAX,KAAqB;AAChD;AAAA;AACE;AACA,gBAAC,QAAD;AAAA,kCACE,QAAC,KAAD;AACE,YAAA,IAAI,EAAED,QAAQ,CAACA,QADjB;AAEE,YAAA,SAAS,EAAC,OAFZ;AAGE,YAAA,SAAS,EAAC,kBAHZ;AAIE,YAAA,IAAI,EAAC,UAJP;AAKE,YAAA,MAAM,EAAGE,CAAD,IAAOA,CAAC,KAAM,GAAEF,QAAQ,CAACG,KAAM,EALzC,CAME;AANF;AAOE,YAAA,SAAS,EAAGD,CAAD,IAAQA,CAAC,GAAI,GAAEF,QAAQ,CAACG,KAAM,EAArB,GAAyB,IAP/C,CAQE;AACA;;AATF;AAAA;AAAA;AAAA;AAAA,kBADF,eAYE;AAAO,YAAA,SAAS,EAAC,kBAAjB;AAAoC,YAAA,OAAO,EAAC,kBAA5C;AAAA,sBACGH,QAAQ,CAACG;AADZ;AAAA;AAAA;AAAA;AAAA,kBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CAkBE;;AAlBF;AAoBD,KArBM,CAAP;AAsBD,GAvBD,CADI,CA0BJ;;;AACA,QAAMC,aAAa,GAAIC,SAAD,IAAe;AACnCb,IAAAA,iBAAiB,CAACa,SAAD,CAAjB;AACD,GAFD;;AAIA,QAAMC,UAAU,GAAG,MAAM;AACvB,QAAI,CAACX,YAAL,EAAmB;AACjB,aAAO,YAAP;AACD,KAFD,MAEO;AACL,aAAO,iBAAP;AACD;AACF,GAND;;AAQA,QAAMY,MAAM,GAAGD,UAAU,EAAzB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAG,GAAEC,MAAO,kBAA1B;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,QAAQ,EAAEX,YAAY,CAACQ,aAAD,CAA5B;AAAA,iBACGN,WAAW,EADd,eAEE;AAAQ,QAAA,SAAS,EAAC,oBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAvDD;;KAAMJ,S;;AAyDN,MAAMc,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLZ,IAAAA,iBAAiB,EAAEY,KAAK,CAACZ,iBADpB;AAELF,IAAAA,YAAY,EAAEc,KAAK,CAACd;AAFf,GAAP;AAID,CALD;;AAOA,MAAMe,SAAS,GAAGrB,OAAO,CAACmB,eAAD,EAAkB;AACzChB,EAAAA;AADyC,CAAlB,CAAP,CAEfE,SAFe,CAAlB;AAIA,eAAeH,SAAS,CAAC;AACvBoB,EAAAA,IAAI,EAAE;AADiB,CAAD,CAAT,CAEZD,SAFY,CAAf","sourcesContent":["import React, { Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { categorySelection } from \"../actions\";\n\n// eslint-disable-next-line\nimport css from \"../css/slideMenu.css\";\n\nconst SlideMenu = ({\n  openOrClosed,\n  handleSubmit,\n  productCategories,\n  categorySelection,\n}) => {\n  const renderInput = () => {\n    return productCategories.map((category, index) => {\n      return (\n        // <div className='checkbox' key={index}>\n        <Fragment>\n          <Field\n            name={category.category}\n            component='input'\n            className='form-check-input'\n            type='checkbox'\n            format={(v) => v === `${category.value}`}\n            // converts redux state string to boolean\n            normalize={(v) => (v ? `${category.value}` : null)}\n            // converts checkbox boolean to string\n            // value={category.category}\n          />\n          <label className='form-check-label' htmlFor='flexCheckDefault'>\n            {category.value}\n          </label>\n        </Fragment>\n        // </div>\n      );\n    });\n  };\n\n  // send the formProps object over to state where in the Object.values(formProps) turns the formProps object's values into an array\n  const submitHandler = (formProps) => {\n    categorySelection(formProps);\n  };\n\n  const toggleMenu = () => {\n    if (!openOrClosed) {\n      return \"slide-menu\";\n    } else {\n      return \"slide-menu open\";\n    }\n  };\n\n  const toggle = toggleMenu();\n\n  return (\n    <div className={`${toggle} container--flex`}>\n      <h5>Filter By Category</h5>\n      <form onSubmit={handleSubmit(submitHandler)}>\n        {renderInput()}\n        <button className='btn btn--secondary'>Apply Filter</button>\n      </form>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    productCategories: state.productCategories,\n    openOrClosed: state.openOrClosed,\n  };\n};\n\nconst slideMenu = connect(mapStateToProps, {\n  categorySelection,\n})(SlideMenu);\n\nexport default reduxForm({\n  form: \"slideMenu\",\n})(slideMenu);\n"]},"metadata":{},"sourceType":"module"}