{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/adamwatt/Desktop/JavaScriptProjects/React-practice/e-commerce/src/components/ShoppingCartCard.js\";\nimport React, { createRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { removeProductFromCart } from \"../actions\"; // eslint-disable-next-line\n\nimport css from \"../css/shoppingCartCard.css\";\n\nconst ShoppingCartCard = ({\n  cartItems\n}) => {\n  // this creates an array of all the refs and stores them to an array for each item in cartItems\n  const refs = Array.from(cartItems, () => /*#__PURE__*/createRef(null)); // this handler loops through the refs and checks that they match the delete button's data-key and removes the item from the dom and cartItems\n  //TODO add in the removeItem action from cartItems in this handler\n\n  const onClick = e => {\n    refs.forEach(ref => {\n      if (ref.current.getAttribute(\"value\") === e.target.getAttribute(\"data-key\")) {\n        removeProductFromCart(ref.current);\n      } // console.log(ref.current.getAttribute(\"value\"));\n\n    });\n  };\n\n  const renderItems = () => {\n    return cartItems.map((cartItem, i) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: refs[i],\n        value: cartItem.id,\n        className: \"cart-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cart-card-img\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: cartItem.image,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cart-card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: cartItem.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"$\", cartItem.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Quantity: \", cartItem.quantity]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              children: \"Update Quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: onClick,\n              \"data-key\": cartItem.id,\n              className: \"btn btn-danger\",\n              children: \"Delete From Cart\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, cartItem.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: renderItems()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 10\n  }, this);\n};\n\n_c = ShoppingCartCard;\n\nconst mapStateToProps = state => {\n  return {\n    cartItems: state.cartItems\n  };\n};\n\nexport default connect(mapStateToProps, {\n  removeProductFromCart\n})(ShoppingCartCard);\n\nvar _c;\n\n$RefreshReg$(_c, \"ShoppingCartCard\");","map":{"version":3,"sources":["/Users/adamwatt/Desktop/JavaScriptProjects/React-practice/e-commerce/src/components/ShoppingCartCard.js"],"names":["React","createRef","connect","removeProductFromCart","css","ShoppingCartCard","cartItems","refs","Array","from","onClick","e","forEach","ref","current","getAttribute","target","renderItems","map","cartItem","i","id","image","title","price","quantity","mapStateToProps","state"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,qBAAT,QAAsC,YAAtC,C,CAEA;;AACA,OAAOC,GAAP,MAAgB,6BAAhB;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AAC1C;AACA,QAAMC,IAAI,GAAGC,KAAK,CAACC,IAAN,CAAWH,SAAX,EAAsB,mBAAML,SAAS,CAAC,IAAD,CAArC,CAAb,CAF0C,CAI1C;AACA;;AACA,QAAMS,OAAO,GAAIC,CAAD,IAAO;AACrBJ,IAAAA,IAAI,CAACK,OAAL,CAAcC,GAAD,IAAS;AACpB,UACEA,GAAG,CAACC,OAAJ,CAAYC,YAAZ,CAAyB,OAAzB,MAAsCJ,CAAC,CAACK,MAAF,CAASD,YAAT,CAAsB,UAAtB,CADxC,EAEE;AACAZ,QAAAA,qBAAqB,CAACU,GAAG,CAACC,OAAL,CAArB;AACD,OALmB,CAMpB;;AACD,KAPD;AAQD,GATD;;AAWA,QAAMG,WAAW,GAAG,MAAM;AACxB,WAAOX,SAAS,CAACY,GAAV,CAAc,CAACC,QAAD,EAAWC,CAAX,KAAiB;AACpC,0BACE;AACE,QAAA,GAAG,EAAEb,IAAI,CAACa,CAAD,CADX;AAGE,QAAA,KAAK,EAAED,QAAQ,CAACE,EAHlB;AAIE,QAAA,SAAS,EAAC,WAJZ;AAAA,gCAKE;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,iCACE;AAAK,YAAA,GAAG,EAAEF,QAAQ,CAACG,KAAnB;AAA0B,YAAA,GAAG,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBALF,eAQE;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,kCACE;AAAA,sBAAKH,QAAQ,CAACI;AAAd;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,4BAAKJ,QAAQ,CAACK,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA,qCAAcL,QAAQ,CAACM,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAK,YAAA,SAAS,EAAC,cAAf;AAAA,oCACE;AAAQ,cAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AACE,cAAA,OAAO,EAAEf,OADX;AAEE,0BAAUS,QAAQ,CAACE,EAFrB;AAGE,cAAA,SAAS,EAAC,gBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA,SAEOF,QAAQ,CAACE,EAFhB;AAAA;AAAA;AAAA;AAAA,cADF;AAyBD,KA1BM,CAAP;AA2BD,GA5BD;;AA8BA,sBAAO;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,cAA4BJ,WAAW;AAAvC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAhDD;;KAAMZ,gB;;AAkDN,MAAMqB,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLrB,IAAAA,SAAS,EAAEqB,KAAK,CAACrB;AADZ,GAAP;AAGD,CAJD;;AAMA,eAAeJ,OAAO,CAACwB,eAAD,EAAkB;AACtCvB,EAAAA;AADsC,CAAlB,CAAP,CAEZE,gBAFY,CAAf","sourcesContent":["import React, { createRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { removeProductFromCart } from \"../actions\";\n\n// eslint-disable-next-line\nimport css from \"../css/shoppingCartCard.css\";\n\nconst ShoppingCartCard = ({ cartItems }) => {\n  // this creates an array of all the refs and stores them to an array for each item in cartItems\n  const refs = Array.from(cartItems, () => createRef(null));\n\n  // this handler loops through the refs and checks that they match the delete button's data-key and removes the item from the dom and cartItems\n  //TODO add in the removeItem action from cartItems in this handler\n  const onClick = (e) => {\n    refs.forEach((ref) => {\n      if (\n        ref.current.getAttribute(\"value\") === e.target.getAttribute(\"data-key\")\n      ) {\n        removeProductFromCart(ref.current);\n      }\n      // console.log(ref.current.getAttribute(\"value\"));\n    });\n  };\n\n  const renderItems = () => {\n    return cartItems.map((cartItem, i) => {\n      return (\n        <div\n          ref={refs[i]}\n          key={cartItem.id}\n          value={cartItem.id}\n          className='cart-card'>\n          <div className='cart-card-img'>\n            <img src={cartItem.image} alt='' />\n          </div>\n          <div className='cart-card-body'>\n            <h5>{cartItem.title}</h5>\n            <p>${cartItem.price}</p>\n            <p>Quantity: {cartItem.quantity}</p>\n            <div className='button-group'>\n              <button className='btn btn-primary'>Update Quantity</button>\n              <button\n                onClick={onClick}\n                data-key={cartItem.id}\n                className='btn btn-danger'>\n                Delete From Cart\n              </button>\n            </div>\n          </div>\n        </div>\n      );\n    });\n  };\n\n  return <div className='container'>{renderItems()}</div>;\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    cartItems: state.cartItems,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  removeProductFromCart,\n})(ShoppingCartCard);\n"]},"metadata":{},"sourceType":"module"}