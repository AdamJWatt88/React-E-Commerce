{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/adamwatt/Desktop/JavaScriptProjects/React-practice/e-commerce/client/src/components/shoppingCart/CostTotal.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\"; // eslint-disable-next-line\n\nimport css from \"../../css/costTotal.css\";\n\nconst CostTotal = ({\n  cartItems\n}) => {\n  const priceOfItems = [null];\n  cartItems.forEach(item => {\n    const totalEach = item.price * item.quantity;\n    priceOfItems.push(totalEach);\n  });\n\n  const reducer = (accumulator, currentValue) => accumulator + currentValue;\n\n  const totalOfCart = priceOfItems.reduce(reducer);\n\n  function decimalAdjust(type, value, exp) {\n    // If the exp is undefined or zero...\n    if (typeof exp === \"undefined\" || +exp === 0) {\n      return Math[type](value);\n    }\n\n    value = +value;\n    exp = +exp; // If the value is not a number or the exp is not an integer...\n\n    if (isNaN(value) || !(typeof exp === \"number\" && exp % 1 === 0)) {\n      return NaN;\n    } // Shift\n\n\n    value = value.toString().split(\"e\");\n    value = Math[type](+(value[0] + \"e\" + (value[1] ? +value[1] - exp : -exp))); // Shift back\n\n    value = value.toString().split(\"e\");\n    return +(value[0] + \"e\" + (value[1] ? +value[1] + exp : exp));\n  } // Decimal round\n\n\n  const round10 = (value, exp) => decimalAdjust(\"round\", value, exp);\n\n  const grandTotal = round10(totalOfCart, -2);\n\n  const itemsInCart = () => {\n    {\n      /* <p>$`${grandTotal}`</p> */\n    }\n\n    /*#__PURE__*/\n    _jsxDEV(\"button\", {\n      className: \"btn btn--checkout ml-1\",\n      children: \"Checkout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-flex cost-total\",\n    children: itemsInCart()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 10\n  }, this); // <div className='container-flex cost-total'>\n  //   <p>{priceOfItems === null ? \"No items in cart\" : `$${grandTotal}`}</p>\n  //   <button className='btn btn--checkout ml-1'>Checkout</button>\n  // </div>\n};\n\n_c = CostTotal;\n\nconst mapStateToProps = state => {\n  return {\n    cartItems: state.cartItems\n  };\n};\n\nexport default connect(mapStateToProps)(CostTotal);\n\nvar _c;\n\n$RefreshReg$(_c, \"CostTotal\");","map":{"version":3,"sources":["/Users/adamwatt/Desktop/JavaScriptProjects/React-practice/e-commerce/client/src/components/shoppingCart/CostTotal.js"],"names":["React","connect","css","CostTotal","cartItems","priceOfItems","forEach","item","totalEach","price","quantity","push","reducer","accumulator","currentValue","totalOfCart","reduce","decimalAdjust","type","value","exp","Math","isNaN","NaN","toString","split","round10","grandTotal","itemsInCart","mapStateToProps","state"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;;AACA,OAAOC,GAAP,MAAgB,yBAAhB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AACnC,QAAMC,YAAY,GAAG,CAAC,IAAD,CAArB;AAEAD,EAAAA,SAAS,CAACE,OAAV,CAAmBC,IAAD,IAAU;AAC1B,UAAMC,SAAS,GAAGD,IAAI,CAACE,KAAL,GAAaF,IAAI,CAACG,QAApC;AACAL,IAAAA,YAAY,CAACM,IAAb,CAAkBH,SAAlB;AACD,GAHD;;AAKA,QAAMI,OAAO,GAAG,CAACC,WAAD,EAAcC,YAAd,KAA+BD,WAAW,GAAGC,YAA7D;;AAEA,QAAMC,WAAW,GAAGV,YAAY,CAACW,MAAb,CAAoBJ,OAApB,CAApB;;AAEA,WAASK,aAAT,CAAuBC,IAAvB,EAA6BC,KAA7B,EAAoCC,GAApC,EAAyC;AACvC;AACA,QAAI,OAAOA,GAAP,KAAe,WAAf,IAA8B,CAACA,GAAD,KAAS,CAA3C,EAA8C;AAC5C,aAAOC,IAAI,CAACH,IAAD,CAAJ,CAAWC,KAAX,CAAP;AACD;;AACDA,IAAAA,KAAK,GAAG,CAACA,KAAT;AACAC,IAAAA,GAAG,GAAG,CAACA,GAAP,CANuC,CAOvC;;AACA,QAAIE,KAAK,CAACH,KAAD,CAAL,IAAgB,EAAE,OAAOC,GAAP,KAAe,QAAf,IAA2BA,GAAG,GAAG,CAAN,KAAY,CAAzC,CAApB,EAAiE;AAC/D,aAAOG,GAAP;AACD,KAVsC,CAWvC;;;AACAJ,IAAAA,KAAK,GAAGA,KAAK,CAACK,QAAN,GAAiBC,KAAjB,CAAuB,GAAvB,CAAR;AACAN,IAAAA,KAAK,GAAGE,IAAI,CAACH,IAAD,CAAJ,CAAW,EAAEC,KAAK,CAAC,CAAD,CAAL,GAAW,GAAX,IAAkBA,KAAK,CAAC,CAAD,CAAL,GAAW,CAACA,KAAK,CAAC,CAAD,CAAN,GAAYC,GAAvB,GAA6B,CAACA,GAAhD,CAAF,CAAX,CAAR,CAbuC,CAcvC;;AACAD,IAAAA,KAAK,GAAGA,KAAK,CAACK,QAAN,GAAiBC,KAAjB,CAAuB,GAAvB,CAAR;AACA,WAAO,EAAEN,KAAK,CAAC,CAAD,CAAL,GAAW,GAAX,IAAkBA,KAAK,CAAC,CAAD,CAAL,GAAW,CAACA,KAAK,CAAC,CAAD,CAAN,GAAYC,GAAvB,GAA6BA,GAA/C,CAAF,CAAP;AACD,GA7BkC,CA+BnC;;;AACA,QAAMM,OAAO,GAAG,CAACP,KAAD,EAAQC,GAAR,KAAgBH,aAAa,CAAC,OAAD,EAAUE,KAAV,EAAiBC,GAAjB,CAA7C;;AAEA,QAAMO,UAAU,GAAGD,OAAO,CAACX,WAAD,EAAc,CAAC,CAAf,CAA1B;;AAEA,QAAMa,WAAW,GAAG,MAAM;AACxB;AACE;AACD;;AACD;AAAA;AAAQ,MAAA,SAAS,EAAC,wBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD,GALD;;AAOA,sBAAO;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA,cAA4CA,WAAW;AAAvD;AAAA;AAAA;AAAA;AAAA,UAAP,CA3CmC,CA4CnC;AACA;AACA;AACA;AACD,CAhDD;;KAAMzB,S;;AAkDN,MAAM0B,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACL1B,IAAAA,SAAS,EAAE0B,KAAK,CAAC1B;AADZ,GAAP;AAGD,CAJD;;AAMA,eAAeH,OAAO,CAAC4B,eAAD,CAAP,CAAyB1B,SAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\n\n// eslint-disable-next-line\nimport css from \"../../css/costTotal.css\";\n\nconst CostTotal = ({ cartItems }) => {\n  const priceOfItems = [null];\n\n  cartItems.forEach((item) => {\n    const totalEach = item.price * item.quantity;\n    priceOfItems.push(totalEach);\n  });\n\n  const reducer = (accumulator, currentValue) => accumulator + currentValue;\n\n  const totalOfCart = priceOfItems.reduce(reducer);\n\n  function decimalAdjust(type, value, exp) {\n    // If the exp is undefined or zero...\n    if (typeof exp === \"undefined\" || +exp === 0) {\n      return Math[type](value);\n    }\n    value = +value;\n    exp = +exp;\n    // If the value is not a number or the exp is not an integer...\n    if (isNaN(value) || !(typeof exp === \"number\" && exp % 1 === 0)) {\n      return NaN;\n    }\n    // Shift\n    value = value.toString().split(\"e\");\n    value = Math[type](+(value[0] + \"e\" + (value[1] ? +value[1] - exp : -exp)));\n    // Shift back\n    value = value.toString().split(\"e\");\n    return +(value[0] + \"e\" + (value[1] ? +value[1] + exp : exp));\n  }\n\n  // Decimal round\n  const round10 = (value, exp) => decimalAdjust(\"round\", value, exp);\n\n  const grandTotal = round10(totalOfCart, -2);\n\n  const itemsInCart = () => {\n    {\n      /* <p>$`${grandTotal}`</p> */\n    }\n    <button className='btn btn--checkout ml-1'>Checkout</button>;\n  };\n\n  return <div className='container-flex cost-total'>{itemsInCart()}</div>;\n  // <div className='container-flex cost-total'>\n  //   <p>{priceOfItems === null ? \"No items in cart\" : `$${grandTotal}`}</p>\n  //   <button className='btn btn--checkout ml-1'>Checkout</button>\n  // </div>\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    cartItems: state.cartItems,\n  };\n};\n\nexport default connect(mapStateToProps)(CostTotal);\n"]},"metadata":{},"sourceType":"module"}