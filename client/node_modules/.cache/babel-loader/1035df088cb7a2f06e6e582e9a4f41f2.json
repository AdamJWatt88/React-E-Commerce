{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/adamwatt/Desktop/JavaScriptProjects/React-practice/e-commerce/client/src/components/shoppingCart/ShoppingCartCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { createRef, Fragment, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { removeProductFromCart, updateQuantity, loadUserCart } from \"../../actions\"; // eslint-disable-next-line\n\nimport css from \"../../css/shoppingCartCard.css\";\n\nconst ShoppingCartCard = ({\n  cartItems,\n  removeProductFromCart,\n  loadUserCart,\n  updateQuantity,\n  authUser\n}) => {\n  _s();\n\n  const [itemDelete, setItemDelete] = useState(true);\n  useEffect(() => {\n    // loadUserCart();\n    console.log(refs);\n  }, [itemDelete]);\n  const priceOfItems = [null];\n  cartItems.cart.forEach(item => {\n    const totalEach = item.price * item.quantity;\n    priceOfItems.push(totalEach);\n  });\n\n  const reducer = (accumulator, currentValue) => accumulator + currentValue;\n\n  const totalOfCart = priceOfItems.reduce(reducer);\n\n  function decimalAdjust(type, value, exp) {\n    // If the exp is undefined or zero...\n    if (typeof exp === \"undefined\" || +exp === 0) {\n      return Math[type](value);\n    }\n\n    value = +value;\n    exp = +exp; // If the value is not a number or the exp is not an integer...\n\n    if (isNaN(value) || !(typeof exp === \"number\" && exp % 1 === 0)) {\n      return NaN;\n    } // Shift\n\n\n    value = value.toString().split(\"e\");\n    value = Math[type](+(value[0] + \"e\" + (value[1] ? +value[1] - exp : -exp))); // Shift back\n\n    value = value.toString().split(\"e\");\n    return +(value[0] + \"e\" + (value[1] ? +value[1] + exp : exp));\n  } // Decimal round\n\n\n  const round10 = (value, exp) => decimalAdjust(\"round\", value, exp);\n\n  const grandTotal = round10(totalOfCart, -2); // this creates an array of all the refs and stores them to an array for each item in cartItems\n\n  const refs = Array.from(cartItems.cart, () => /*#__PURE__*/createRef(null)); // this handler loops through the refs and checks that they match the delete button's data-key then removes the item from the dom and cartItems\n\n  const deleteFromCart = e => {\n    refs.forEach(ref => {\n      if (ref.current.getAttribute(\"value\") === e.target.getAttribute(\"data-delete\")) {\n        removeProductFromCart(ref.current.getAttribute(\"value\"), ref.current.getAttribute(\"id\"));\n        console.log(ref.current.getAttribute(\"id\"));\n        setItemDelete(!itemDelete);\n      }\n    });\n  };\n\n  const renderOptions = cartItemQuantity => {\n    const options = [];\n\n    for (let i = 1; i <= 20; i++) {\n      options.push( /*#__PURE__*/_jsxDEV(\"option\", {\n        value: i,\n        children: [\"Qty: \", i]\n      }, [i], true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this));\n    }\n\n    return options;\n  };\n\n  const onChange = e => {\n    refs.forEach(ref => {\n      if (ref.current.getAttribute(\"value\") === e.target.getAttribute(\"data-select\")) {\n        updateQuantity({\n          id: +ref.current.getAttribute(\"value\"),\n          quantity: +e.target.value\n        });\n        console.log(\"quantity submitted\");\n      }\n    });\n  };\n\n  const renderItems = () => {\n    return cartItems.cart.map((cartItem, i) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: cartItem._id,\n        ref: refs[cartItem.cart.id],\n        value: cartItem.id,\n        className: \"cart-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"cart-card__img\",\n          src: cartItem.image,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cart-card__body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"cart-card__title\",\n            children: cartItem.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\"$\", cartItem.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cart-card__button-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"form\", {\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                onChange: e => onChange(e),\n                defaultValue: cartItem.quantity,\n                \"data-select\": cartItem.id,\n                name: \"Quantity\",\n                children: renderOptions(cartItem.quantity)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: deleteFromCart,\n              \"data-delete\": cartItem.id,\n              className: \"cart-card__button-group-btn ml-1\",\n              children: \"Delete Item\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, cartItem.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  const emptyCart = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Your shopping cart is empty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 12\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: grandTotal === 0 ? /*#__PURE__*/_jsxDEV(Fragment, {\n      children: emptyCart()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shopping-cart-card-container mb-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"shopping-cart-title\",\n        children: \"Shopping Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this), renderItems(), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"subtotal ml-a\",\n        children: [\"Subtotal: $\", grandTotal]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ShoppingCartCard, \"GegkzygH7PHc2abV9auA4V4nEYc=\");\n\n_c = ShoppingCartCard;\n\nconst mapStateToProps = state => {\n  return {\n    cartItems: state.cartItems,\n    authUser: state.authUser\n  };\n};\n\nexport default connect(mapStateToProps, {\n  removeProductFromCart,\n  updateQuantity,\n  loadUserCart\n})(ShoppingCartCard);\n\nvar _c;\n\n$RefreshReg$(_c, \"ShoppingCartCard\");","map":{"version":3,"sources":["/Users/adamwatt/Desktop/JavaScriptProjects/React-practice/e-commerce/client/src/components/shoppingCart/ShoppingCartCard.js"],"names":["React","createRef","Fragment","useEffect","useState","connect","removeProductFromCart","updateQuantity","loadUserCart","css","ShoppingCartCard","cartItems","authUser","itemDelete","setItemDelete","console","log","refs","priceOfItems","cart","forEach","item","totalEach","price","quantity","push","reducer","accumulator","currentValue","totalOfCart","reduce","decimalAdjust","type","value","exp","Math","isNaN","NaN","toString","split","round10","grandTotal","Array","from","deleteFromCart","e","ref","current","getAttribute","target","renderOptions","cartItemQuantity","options","i","onChange","id","renderItems","map","cartItem","_id","image","title","emptyCart","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { createRef, Fragment, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  removeProductFromCart,\n  updateQuantity,\n  loadUserCart,\n} from \"../../actions\";\n\n// eslint-disable-next-line\nimport css from \"../../css/shoppingCartCard.css\";\n\nconst ShoppingCartCard = ({\n  cartItems,\n  removeProductFromCart,\n  loadUserCart,\n  updateQuantity,\n  authUser,\n}) => {\n  const [itemDelete, setItemDelete] = useState(true);\n\n  useEffect(() => {\n    // loadUserCart();\n    console.log(refs);\n  }, [itemDelete]);\n\n  const priceOfItems = [null];\n\n  cartItems.cart.forEach((item) => {\n    const totalEach = item.price * item.quantity;\n    priceOfItems.push(totalEach);\n  });\n\n  const reducer = (accumulator, currentValue) => accumulator + currentValue;\n\n  const totalOfCart = priceOfItems.reduce(reducer);\n\n  function decimalAdjust(type, value, exp) {\n    // If the exp is undefined or zero...\n    if (typeof exp === \"undefined\" || +exp === 0) {\n      return Math[type](value);\n    }\n    value = +value;\n    exp = +exp;\n    // If the value is not a number or the exp is not an integer...\n    if (isNaN(value) || !(typeof exp === \"number\" && exp % 1 === 0)) {\n      return NaN;\n    }\n    // Shift\n    value = value.toString().split(\"e\");\n    value = Math[type](+(value[0] + \"e\" + (value[1] ? +value[1] - exp : -exp)));\n    // Shift back\n    value = value.toString().split(\"e\");\n    return +(value[0] + \"e\" + (value[1] ? +value[1] + exp : exp));\n  }\n\n  // Decimal round\n  const round10 = (value, exp) => decimalAdjust(\"round\", value, exp);\n\n  const grandTotal = round10(totalOfCart, -2);\n\n  // this creates an array of all the refs and stores them to an array for each item in cartItems\n  const refs = Array.from(cartItems.cart, () => createRef(null));\n\n  // this handler loops through the refs and checks that they match the delete button's data-key then removes the item from the dom and cartItems\n  const deleteFromCart = (e) => {\n    refs.forEach((ref) => {\n      if (\n        ref.current.getAttribute(\"value\") ===\n        e.target.getAttribute(\"data-delete\")\n      ) {\n        removeProductFromCart(\n          ref.current.getAttribute(\"value\"),\n          ref.current.getAttribute(\"id\")\n        );\n        console.log(ref.current.getAttribute(\"id\"));\n        setItemDelete(!itemDelete);\n      }\n    });\n  };\n\n  const renderOptions = (cartItemQuantity) => {\n    const options = [];\n\n    for (let i = 1; i <= 20; i++) {\n      options.push(\n        <option value={i} key={[i]}>\n          Qty: {i}\n        </option>\n      );\n    }\n    return options;\n  };\n\n  const onChange = (e) => {\n    refs.forEach((ref) => {\n      if (\n        ref.current.getAttribute(\"value\") ===\n        e.target.getAttribute(\"data-select\")\n      ) {\n        updateQuantity({\n          id: +ref.current.getAttribute(\"value\"),\n          quantity: +e.target.value,\n        });\n        console.log(\"quantity submitted\");\n      }\n    });\n  };\n\n  const renderItems = () => {\n    return cartItems.cart.map((cartItem, i) => {\n      return (\n        <div\n          id={cartItem._id}\n          ref={refs[cartItem.cart.id]}\n          key={cartItem.id}\n          value={cartItem.id}\n          className='cart-card'>\n          <img className='cart-card__img' src={cartItem.image} alt='' />\n          <div className='cart-card__body'>\n            <h5 className='cart-card__title'>{cartItem.title}</h5>\n            <h1>${cartItem.price}</h1>\n            <div className='cart-card__button-group'>\n              <form>\n                <select\n                  onChange={(e) => onChange(e)}\n                  defaultValue={cartItem.quantity}\n                  data-select={cartItem.id}\n                  name='Quantity'>\n                  {renderOptions(cartItem.quantity)}\n                </select>\n              </form>\n              <span\n                onClick={deleteFromCart}\n                data-delete={cartItem.id}\n                className='cart-card__button-group-btn ml-1'>\n                Delete Item\n              </span>\n            </div>\n          </div>\n        </div>\n      );\n    });\n  };\n\n  const emptyCart = () => {\n    return <div>Your shopping cart is empty</div>;\n  };\n\n  return (\n    <Fragment>\n      {grandTotal === 0 ? (\n        <Fragment>{emptyCart()}</Fragment>\n      ) : (\n        <div className='shopping-cart-card-container mb-1'>\n          <h1 className='shopping-cart-title'>Shopping Cart</h1>\n          {renderItems()}\n          <h1 className='subtotal ml-a'>Subtotal: ${grandTotal}</h1>\n        </div>\n      )}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    cartItems: state.cartItems,\n    authUser: state.authUser,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  removeProductFromCart,\n  updateQuantity,\n  loadUserCart,\n})(ShoppingCartCard);\n"]},"metadata":{},"sourceType":"module"}