{"ast":null,"code":"import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { FETCH_SINGLE_PRODUCT, FETCH_PRODUCTS, FETCH_CATEGORY, SET_SLIDE_MENU, CLEAR_CATEGORY, CLEAR_PRODUCT, ADD_CART_ITEM, REMOVE_CART_ITEM, CART_ITEM_CHECK, CART_ERROR, UPDATE_QUANTITY, REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, LOAD_USER_CART, AUTH_ERROR, REMOVE_ALERT, SET_ALERT, CLEAR_ERRORS, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT } from \"../types\"; //open and close the slideMenu if true or false\n\nexport const showSlideMenu = () => {\n  return {\n    type: SET_SLIDE_MENU\n  };\n}; //get all products\n\nexport const getProducts = categories => {\n  return async dispatch => {\n    const response = await fetch(\"https://fakestoreapi.com/products\");\n    const data = await response.json();\n    dispatch({\n      type: FETCH_PRODUCTS,\n      payload: data\n    });\n    dispatch({\n      type: CLEAR_PRODUCT\n    });\n  };\n}; // fetch products by category\n\nexport const getCategory = category => {\n  return async dispatch => {\n    const response = await fetch(`https://fakestoreapi.com/products/category/${category}`);\n    const data = await response.json();\n    dispatch({\n      type: FETCH_CATEGORY,\n      payload: data\n    });\n  };\n};\nexport const clearCategory = () => {\n  return {\n    type: CLEAR_CATEGORY\n  };\n}; // fetch a single product by its id\n\nexport const getSingleProduct = id => {\n  return async dispatch => {\n    const response = await fetch(`https://fakestoreapi.com/products/${id}`);\n    const data = await response.json();\n    dispatch({\n      type: FETCH_SINGLE_PRODUCT,\n      payload: data\n    });\n  };\n}; //adds a product to the cartItems state\n\nexport const addProductToCart = cartItem => {\n  return async (dispatch, getState) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const isAuthenticated = getState().authUser.isAuthenticated;\n\n    try {\n      if (isAuthenticated) {\n        const res = await axios.post(\"/api/cart\", cartItem, config);\n        console.log(cartItem);\n        dispatch({\n          type: ADD_CART_ITEM,\n          payload: res.data\n        });\n      } else {\n        dispatch({\n          type: ADD_CART_ITEM,\n          payload: cartItem\n        });\n      }\n    } catch (err) {\n      dispatch({\n        type: CART_ERROR,\n        payload: err.response.msg\n      });\n    }\n  };\n}; //remove a product from the cartItems state\n\nexport const removeProductFromCart = (cartItem, id) => {\n  return async (dispatch, getState) => {\n    const isAuthenticated = getState().authUser.isAuthenticated;\n\n    try {\n      if (isAuthenticated) {\n        const res = await axios.delete(`/api/cart/${id}`);\n        dispatch({\n          type: REMOVE_CART_ITEM,\n          payload: +cartItem\n        });\n      } else {\n        dispatch({\n          type: REMOVE_CART_ITEM,\n          payload: +cartItem\n        });\n      }\n    } catch (err) {\n      dispatch({\n        type: CART_ERROR,\n        payload: err.message\n      });\n    }\n  };\n};\nexport const updateQuantity = ({\n  _id,\n  id,\n  quantity\n}) => {\n  return async (dispatch, getState) => {\n    const isAuthenticated = getState().authUser.isAuthenticated;\n\n    try {\n      if (isAuthenticated) {\n        const res = await axios.put(`/api/cart/${_id}`, {\n          quantity\n        });\n        dispatch({\n          type: UPDATE_QUANTITY,\n          payload: res.data\n        });\n      } else {\n        dispatch({\n          type: UPDATE_QUANTITY,\n          payload: {\n            id,\n            quantity\n          }\n        });\n      }\n    } catch (err) {\n      dispatch({\n        type: CART_ERROR,\n        payload: err.message\n      });\n    }\n  };\n}; //checks if an item is already inside the cartItems state by matching the id\n\nexport const isItemInCart = () => {\n  alert(\"That item is already in cart\");\n  return {\n    type: CART_ITEM_CHECK\n  };\n};\nexport const loadUserCart = () => {\n  return async dispatch => {\n    const res = await axios.get(\"/api/cart\");\n    dispatch({\n      type: LOAD_USER_CART,\n      payload: res.data\n    });\n  };\n}; // Load user\n\nexport const loadUser = () => {\n  return async dispatch => {\n    setAuthToken(localStorage.token);\n\n    try {\n      const res = await axios.get(\"/api/auth\");\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: AUTH_ERROR\n      });\n    }\n  };\n}; // Register user\n\nexport const registerUser = user => {\n  return async dispatch => {\n    const config = {\n      header: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    try {\n      const res = await axios.post(\"/api/users\", user, config);\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      });\n      loadUser();\n    } catch (err) {\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: err.response.data.msg\n      });\n    }\n  };\n}; // Login user\n\nexport const login = user => {\n  return async dispatch => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    try {\n      const res = await axios.post(\"/api/auth\", user, config);\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data\n      });\n      loadUser();\n    } catch (err) {\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: err.response.data.msg\n      });\n    }\n  };\n}; // Logout User\n\nexport const logout = () => {\n  return {\n    type: LOGOUT\n  };\n}; // Set alert\n\nexport const setAlert = (msg, type, timeout = 5000) => {\n  const id = uuidv4();\n  return async dispatch => {\n    dispatch({\n      type: SET_ALERT,\n      payload: {\n        msg,\n        type,\n        id\n      }\n    });\n    setTimeout(() => dispatch({\n      type: REMOVE_ALERT,\n      payload: id\n    }), timeout);\n  };\n};\nexport const clearErrors = () => {\n  return {\n    type: CLEAR_ERRORS\n  };\n};","map":{"version":3,"sources":["/Users/adamwatt/Desktop/JavaScriptProjects/React-practice/e-commerce/client/src/actions/index.js"],"names":["axios","setAuthToken","v4","uuidv4","FETCH_SINGLE_PRODUCT","FETCH_PRODUCTS","FETCH_CATEGORY","SET_SLIDE_MENU","CLEAR_CATEGORY","CLEAR_PRODUCT","ADD_CART_ITEM","REMOVE_CART_ITEM","CART_ITEM_CHECK","CART_ERROR","UPDATE_QUANTITY","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","LOAD_USER_CART","AUTH_ERROR","REMOVE_ALERT","SET_ALERT","CLEAR_ERRORS","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","showSlideMenu","type","getProducts","categories","dispatch","response","fetch","data","json","payload","getCategory","category","clearCategory","getSingleProduct","id","addProductToCart","cartItem","getState","config","headers","isAuthenticated","authUser","res","post","console","log","err","msg","removeProductFromCart","delete","message","updateQuantity","_id","quantity","put","isItemInCart","alert","loadUserCart","get","loadUser","localStorage","token","registerUser","user","header","login","logout","setAlert","timeout","setTimeout","clearErrors"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport {\n  FETCH_SINGLE_PRODUCT,\n  FETCH_PRODUCTS,\n  FETCH_CATEGORY,\n  SET_SLIDE_MENU,\n  CLEAR_CATEGORY,\n  CLEAR_PRODUCT,\n  ADD_CART_ITEM,\n  REMOVE_CART_ITEM,\n  CART_ITEM_CHECK,\n  CART_ERROR,\n  UPDATE_QUANTITY,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  LOAD_USER_CART,\n  AUTH_ERROR,\n  REMOVE_ALERT,\n  SET_ALERT,\n  CLEAR_ERRORS,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n} from \"../types\";\n\n//open and close the slideMenu if true or false\nexport const showSlideMenu = () => {\n  return {\n    type: SET_SLIDE_MENU,\n  };\n};\n\n//get all products\nexport const getProducts = (categories) => {\n  return async (dispatch) => {\n    const response = await fetch(\"https://fakestoreapi.com/products\");\n\n    const data = await response.json();\n\n    dispatch({\n      type: FETCH_PRODUCTS,\n      payload: data,\n    });\n    dispatch({\n      type: CLEAR_PRODUCT,\n    });\n  };\n};\n\n// fetch products by category\nexport const getCategory = (category) => {\n  return async (dispatch) => {\n    const response = await fetch(\n      `https://fakestoreapi.com/products/category/${category}`\n    );\n    const data = await response.json();\n\n    dispatch({\n      type: FETCH_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const clearCategory = () => {\n  return {\n    type: CLEAR_CATEGORY,\n  };\n};\n\n// fetch a single product by its id\nexport const getSingleProduct = (id) => {\n  return async (dispatch) => {\n    const response = await fetch(`https://fakestoreapi.com/products/${id}`);\n    const data = await response.json();\n\n    dispatch({\n      type: FETCH_SINGLE_PRODUCT,\n      payload: data,\n    });\n  };\n};\n\n//adds a product to the cartItems state\nexport const addProductToCart = (cartItem) => {\n  return async (dispatch, getState) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const isAuthenticated = getState().authUser.isAuthenticated;\n\n    try {\n      if (isAuthenticated) {\n        const res = await axios.post(\"/api/cart\", cartItem, config);\n\n        console.log(cartItem);\n        dispatch({\n          type: ADD_CART_ITEM,\n          payload: res.data,\n        });\n      } else {\n        dispatch({\n          type: ADD_CART_ITEM,\n          payload: cartItem,\n        });\n      }\n    } catch (err) {\n      dispatch({\n        type: CART_ERROR,\n        payload: err.response.msg,\n      });\n    }\n  };\n};\n\n//remove a product from the cartItems state\nexport const removeProductFromCart = (cartItem, id) => {\n  return async (dispatch, getState) => {\n    const isAuthenticated = getState().authUser.isAuthenticated;\n\n    try {\n      if (isAuthenticated) {\n        const res = await axios.delete(`/api/cart/${id}`);\n        dispatch({\n          type: REMOVE_CART_ITEM,\n          payload: +cartItem,\n        });\n      } else {\n        dispatch({\n          type: REMOVE_CART_ITEM,\n          payload: +cartItem,\n        });\n      }\n    } catch (err) {\n      dispatch({\n        type: CART_ERROR,\n        payload: err.message,\n      });\n    }\n  };\n};\n\nexport const updateQuantity = ({ _id, id, quantity }) => {\n  return async (dispatch, getState) => {\n    const isAuthenticated = getState().authUser.isAuthenticated;\n\n    try {\n      if (isAuthenticated) {\n        const res = await axios.put(`/api/cart/${_id}`, { quantity });\n        dispatch({\n          type: UPDATE_QUANTITY,\n          payload: res.data,\n        });\n      } else {\n        dispatch({\n          type: UPDATE_QUANTITY,\n          payload: { id, quantity },\n        });\n      }\n    } catch (err) {\n      dispatch({\n        type: CART_ERROR,\n        payload: err.message,\n      });\n    }\n  };\n};\n\n//checks if an item is already inside the cartItems state by matching the id\nexport const isItemInCart = () => {\n  alert(\"That item is already in cart\");\n  return {\n    type: CART_ITEM_CHECK,\n  };\n};\n\nexport const loadUserCart = () => {\n  return async (dispatch) => {\n    const res = await axios.get(\"/api/cart\");\n\n    dispatch({\n      type: LOAD_USER_CART,\n      payload: res.data,\n    });\n  };\n};\n\n// Load user\nexport const loadUser = () => {\n  return async (dispatch) => {\n    setAuthToken(localStorage.token);\n\n    try {\n      const res = await axios.get(\"/api/auth\");\n\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data,\n      });\n    } catch (err) {\n      dispatch({ type: AUTH_ERROR });\n    }\n  };\n};\n\n// Register user\nexport const registerUser = (user) => {\n  return async (dispatch) => {\n    const config = {\n      header: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    try {\n      const res = await axios.post(\"/api/users\", user, config);\n\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data,\n      });\n\n      loadUser();\n    } catch (err) {\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: err.response.data.msg,\n      });\n    }\n  };\n};\n\n// Login user\nexport const login = (user) => {\n  return async (dispatch) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    try {\n      const res = await axios.post(\"/api/auth\", user, config);\n\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data,\n      });\n\n      loadUser();\n    } catch (err) {\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: err.response.data.msg,\n      });\n    }\n  };\n};\n\n// Logout User\nexport const logout = () => {\n  return {\n    type: LOGOUT,\n  };\n};\n\n// Set alert\nexport const setAlert = (msg, type, timeout = 5000) => {\n  const id = uuidv4();\n  return async (dispatch) => {\n    dispatch({\n      type: SET_ALERT,\n      payload: { msg, type, id },\n    });\n\n    setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), timeout);\n  };\n};\n\nexport const clearErrors = () => {\n  return {\n    type: CLEAR_ERRORS,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}