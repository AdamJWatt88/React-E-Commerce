{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/adamwatt/Desktop/JavaScriptProjects/React-practice/e-commerce/src/components/StoreGrid.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\n\nconst StoreGrid = () => {\n  _s();\n\n  const [image, setImage] = useState(\"\");\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/photos/\").then(response => response.json()).then(data => {\n      data.filter(photo => {\n        if (photo.albumId === 1) {\n          console.log(photo);\n        }\n      }).forEach(newPhotoArr => {\n        newPhotoArr.forEach(photo => {\n          //   setImage(photo.thumbnailUrl);\n          console.log(photo.thumbnailUrl);\n        });\n      });\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: image,\n      alt: image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StoreGrid, \"ZjBZaSstKyKWDOSDM5fHA8b4Se8=\");\n\n_c = StoreGrid;\nexport default StoreGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"StoreGrid\");","map":{"version":3,"sources":["/Users/adamwatt/Desktop/JavaScriptProjects/React-practice/e-commerce/src/components/StoreGrid.js"],"names":["React","useState","useEffect","StoreGrid","image","setImage","fetch","then","response","json","data","filter","photo","albumId","console","log","forEach","newPhotoArr","thumbnailUrl"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,KAAK,CAAC,8CAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESG,IAAD,IAAU;AACdA,MAAAA,IAAI,CACDC,MADH,CACWC,KAAD,IAAW;AACjB,YAAIA,KAAK,CAACC,OAAN,KAAkB,CAAtB,EAAyB;AACvBC,UAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACD;AACF,OALH,EAMGI,OANH,CAMYC,WAAD,IAAiB;AACxBA,QAAAA,WAAW,CAACD,OAAZ,CAAqBJ,KAAD,IAAW;AAC7B;AACAE,UAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACM,YAAlB;AACD,SAHD;AAID,OAXH;AAYD,KAfH;AAgBD,GAjBQ,EAiBN,EAjBM,CAAT;AAmBA,sBACE;AAAA,2BACE;AAAK,MAAA,GAAG,EAAEd,KAAV;AAAiB,MAAA,GAAG,EAAEA;AAAtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA3BD;;GAAMD,S;;KAAAA,S;AA6BN,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst StoreGrid = () => {\n  const [image, setImage] = useState(\"\");\n\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/photos/\")\n      .then((response) => response.json())\n      .then((data) => {\n        data\n          .filter((photo) => {\n            if (photo.albumId === 1) {\n              console.log(photo);\n            }\n          })\n          .forEach((newPhotoArr) => {\n            newPhotoArr.forEach((photo) => {\n              //   setImage(photo.thumbnailUrl);\n              console.log(photo.thumbnailUrl);\n            });\n          });\n      });\n  }, []);\n\n  return (\n    <div>\n      <img src={image} alt={image} />\n    </div>\n  );\n};\n\nexport default StoreGrid;\n"]},"metadata":{},"sourceType":"module"}