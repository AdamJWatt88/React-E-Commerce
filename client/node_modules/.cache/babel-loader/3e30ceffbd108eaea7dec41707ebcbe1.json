{"ast":null,"code":"import _ from \"lodash\";\nimport { ADD_CART_ITEM, REMOVE_CART_ITEM, UPDATE_QUANTITY, CART_ITEM_CHECK, CART_ERROR, LOAD_USER_CART, LOGIN_SUCCESS } from \"../types\";\n\nconst cartItemReducer = (state = [], action) => {\n  switch (action.type) {\n    case ADD_CART_ITEM:\n      return [...state, action.payload];\n\n    case LOAD_USER_CART:\n      const userCartItem = action.payload.map(item => [...state, item]);\n      return userCartItem;\n\n    case REMOVE_CART_ITEM:\n      return state.filter(item => item.id !== action.payload);\n\n    case CART_ITEM_CHECK:\n      return state;\n\n    case UPDATE_QUANTITY:\n      const foundItem = _.find(state, {\n        id: action.payload.id\n      });\n\n      const newItem = { ...foundItem,\n        quantity: action.payload.quantity\n      };\n      const filteredState = state.filter(item => item.id !== action.payload.id);\n      return [...filteredState, newItem];\n\n    case CART_ERROR:\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nexport default cartItemReducer;","map":{"version":3,"sources":["/Users/adamwatt/Desktop/JavaScriptProjects/React-practice/e-commerce/client/src/reducers/cartItemReducer.js"],"names":["_","ADD_CART_ITEM","REMOVE_CART_ITEM","UPDATE_QUANTITY","CART_ITEM_CHECK","CART_ERROR","LOAD_USER_CART","LOGIN_SUCCESS","cartItemReducer","state","action","type","payload","userCartItem","map","item","filter","id","foundItem","find","newItem","quantity","filteredState"],"mappings":"AAAA,OAAOA,CAAP,MAAc,QAAd;AAEA,SACEC,aADF,EAEEC,gBAFF,EAGEC,eAHF,EAIEC,eAJF,EAKEC,UALF,EAMEC,cANF,EAOEC,aAPF,QAQO,UARP;;AAUA,MAAMC,eAAe,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,aAAL;AACE,aAAO,CAAC,GAAGQ,KAAJ,EAAWC,MAAM,CAACE,OAAlB,CAAP;;AACF,SAAKN,cAAL;AACE,YAAMO,YAAY,GAAGH,MAAM,CAACE,OAAP,CAAeE,GAAf,CAAoBC,IAAD,IAAU,CAAC,GAAGN,KAAJ,EAAWM,IAAX,CAA7B,CAArB;AACA,aAAOF,YAAP;;AACF,SAAKX,gBAAL;AACE,aAAOO,KAAK,CAACO,MAAN,CAAcD,IAAD,IAAUA,IAAI,CAACE,EAAL,KAAYP,MAAM,CAACE,OAA1C,CAAP;;AACF,SAAKR,eAAL;AACE,aAAOK,KAAP;;AACF,SAAKN,eAAL;AACE,YAAMe,SAAS,GAAGlB,CAAC,CAACmB,IAAF,CAAOV,KAAP,EAAc;AAAEQ,QAAAA,EAAE,EAAEP,MAAM,CAACE,OAAP,CAAeK;AAArB,OAAd,CAAlB;;AACA,YAAMG,OAAO,GAAG,EAAE,GAAGF,SAAL;AAAgBG,QAAAA,QAAQ,EAAEX,MAAM,CAACE,OAAP,CAAeS;AAAzC,OAAhB;AACA,YAAMC,aAAa,GAAGb,KAAK,CAACO,MAAN,CACnBD,IAAD,IAAUA,IAAI,CAACE,EAAL,KAAYP,MAAM,CAACE,OAAP,CAAeK,EADjB,CAAtB;AAGA,aAAO,CAAC,GAAGK,aAAJ,EAAmBF,OAAnB,CAAP;;AACF,SAAKf,UAAL;AACE,aAAOK,MAAM,CAACE,OAAd;;AACF;AACE,aAAOH,KAAP;AApBJ;AAsBD,CAvBD;;AAyBA,eAAeD,eAAf","sourcesContent":["import _ from \"lodash\";\n\nimport {\n  ADD_CART_ITEM,\n  REMOVE_CART_ITEM,\n  UPDATE_QUANTITY,\n  CART_ITEM_CHECK,\n  CART_ERROR,\n  LOAD_USER_CART,\n  LOGIN_SUCCESS,\n} from \"../types\";\n\nconst cartItemReducer = (state = [], action) => {\n  switch (action.type) {\n    case ADD_CART_ITEM:\n      return [...state, action.payload];\n    case LOAD_USER_CART:\n      const userCartItem = action.payload.map((item) => [...state, item]);\n      return userCartItem;\n    case REMOVE_CART_ITEM:\n      return state.filter((item) => item.id !== action.payload);\n    case CART_ITEM_CHECK:\n      return state;\n    case UPDATE_QUANTITY:\n      const foundItem = _.find(state, { id: action.payload.id });\n      const newItem = { ...foundItem, quantity: action.payload.quantity };\n      const filteredState = state.filter(\n        (item) => item.id !== action.payload.id\n      );\n      return [...filteredState, newItem];\n    case CART_ERROR:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default cartItemReducer;\n"]},"metadata":{},"sourceType":"module"}