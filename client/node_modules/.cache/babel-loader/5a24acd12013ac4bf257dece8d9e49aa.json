{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/adamwatt/Desktop/JavaScriptProjects/React-practice/e-commerce/src/components/Product.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getSingleProduct, addProductToCart, isItemInCart } from \"../actions\";\nimport { Link } from \"react-router-dom\";\nimport Loading from \"./Loading\"; // eslint-disable-next-line\n\nimport css from \"../css/product.css\"; //? bring in updateQuantity from cartItemReducer and run function for Buy It Now. This will take the user to their cart with all items present in cart but also with the item they just chose to 'buy now' with the updated values for quantity\n\nconst Product = props => {\n  _s();\n\n  const {\n    singleProduct,\n    cartItems\n  } = props;\n  const {\n    id\n  } = props.match.params;\n  const [number, setNumber] = useState(1);\n  useEffect(() => {\n    // console.log(singleProduct);\n    props.getSingleProduct(id); // eslint-disable-next-line\n  }, []);\n\n  if (!singleProduct) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }, this);\n  }\n\n  const buyItNow = e => {\n    e.preventDefault();\n    console.log(singleProduct);\n  };\n\n  const addToCart = e => {\n    e.preventDefault();\n\n    const checkCart = element => element.id === singleProduct.id; //* this properly adds an item to the cartItems state with a quantity key/value and will check if an item is already inside the cart\n\n\n    cartItems.some(checkCart) ? props.isItemInCart() : props.addProductToCart({ ...singleProduct,\n      quantity: number\n    });\n  };\n\n  const onChange = e => {\n    setNumber(+e.target.value);\n  };\n\n  const increaseValue = () => {\n    setNumber(number + 1);\n  };\n\n  const decreaseValue = () => {\n    if (number === 0) {\n      setNumber(0);\n    } else {\n      setNumber(number - 1);\n    }\n  };\n\n  const renderProduct = () => {\n    const {\n      image,\n      title,\n      price,\n      description,\n      id,\n      quantity\n    } = singleProduct;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"card__img\",\n        src: image,\n        alt: image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [\"$\", price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"btn-group\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: addToCart,\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn--checkout\",\n                children: \"Buy Now\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn--secondary\",\n                children: \"Add to cart\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"quantity-selector\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  onClick: () => increaseValue(),\n                  className: \"quantity-selector--increment\",\n                  children: \"+\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  name: \"product\",\n                  min: \"1\",\n                  type: \"number\",\n                  className: \"quantity-selector--input\",\n                  onChange: onChange,\n                  value: number\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  onClick: () => decreaseValue(),\n                  className: \"quantity-selector--increment\",\n                  children: \"-\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: renderProduct()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Product, \"9VpGhAAIUyvHE9bNkqGESSDw7F0=\");\n\n_c = Product;\n\nconst mapStateToProps = state => {\n  return {\n    singleProduct: state.singleProduct,\n    cartItems: state.cartItems\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getSingleProduct,\n  addProductToCart,\n  isItemInCart\n})(Product);\n\nvar _c;\n\n$RefreshReg$(_c, \"Product\");","map":{"version":3,"sources":["/Users/adamwatt/Desktop/JavaScriptProjects/React-practice/e-commerce/src/components/Product.js"],"names":["React","useEffect","useState","connect","getSingleProduct","addProductToCart","isItemInCart","Link","Loading","css","Product","props","singleProduct","cartItems","id","match","params","number","setNumber","buyItNow","e","preventDefault","console","log","addToCart","checkCart","element","some","quantity","onChange","target","value","increaseValue","decreaseValue","renderProduct","image","title","price","description","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getSingleProduct, addProductToCart, isItemInCart } from \"../actions\";\nimport { Link } from \"react-router-dom\";\nimport Loading from \"./Loading\";\n\n// eslint-disable-next-line\nimport css from \"../css/product.css\";\n\n//? bring in updateQuantity from cartItemReducer and run function for Buy It Now. This will take the user to their cart with all items present in cart but also with the item they just chose to 'buy now' with the updated values for quantity\n\nconst Product = (props) => {\n  const { singleProduct, cartItems } = props;\n  const { id } = props.match.params;\n\n  const [number, setNumber] = useState(1);\n\n  useEffect(() => {\n    // console.log(singleProduct);\n    props.getSingleProduct(id);\n    // eslint-disable-next-line\n  }, []);\n\n  if (!singleProduct) {\n    return <Loading />;\n  }\n\n  const buyItNow = (e) => {\n    e.preventDefault();\n    console.log(singleProduct);\n  };\n\n  const addToCart = (e) => {\n    e.preventDefault();\n\n    const checkCart = (element) => element.id === singleProduct.id;\n\n    //* this properly adds an item to the cartItems state with a quantity key/value and will check if an item is already inside the cart\n    cartItems.some(checkCart)\n      ? props.isItemInCart()\n      : props.addProductToCart({ ...singleProduct, quantity: number });\n  };\n\n  const onChange = (e) => {\n    setNumber(+e.target.value);\n  };\n\n  const increaseValue = () => {\n    setNumber(number + 1);\n  };\n\n  const decreaseValue = () => {\n    if (number === 0) {\n      setNumber(0);\n    } else {\n      setNumber(number - 1);\n    }\n  };\n\n  const renderProduct = () => {\n    const { image, title, price, description, id, quantity } = singleProduct;\n\n    return (\n      <div className='card'>\n        {/* this card__img conflicts with storeGrid.css */}\n        <img className='card__img' src={image} alt={image} />\n        <div className='card-body'>\n          <h5>{title}</h5>\n          <p>{description}</p>\n          <p>\n            <small>${price}</small>\n          </p>\n          <div>\n            <div className='btn-group'>\n              <form onSubmit={addToCart}>\n                <button className='btn btn--checkout'>Buy Now</button>\n                <button className='btn btn--secondary'>Add to cart</button>\n\n                <div className='quantity-selector'>\n                  <span\n                    onClick={() => increaseValue()}\n                    className='quantity-selector--increment'>\n                    +\n                  </span>\n                  <input\n                    name='product'\n                    min='1'\n                    type='number'\n                    className='quantity-selector--input'\n                    onChange={onChange}\n                    value={number}\n                  />\n\n                  <span\n                    onClick={() => decreaseValue()}\n                    className='quantity-selector--increment'>\n                    -\n                  </span>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  return <div className='container'>{renderProduct()}</div>;\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    singleProduct: state.singleProduct,\n    cartItems: state.cartItems,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getSingleProduct,\n  addProductToCart,\n  isItemInCart,\n})(Product);\n"]},"metadata":{},"sourceType":"module"}