{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/adamwatt/Desktop/JavaScriptProjects/React-practice/e-commerce/src/components/StoreGrid.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getProducts } from \"../actions\";\nimport { Link } from \"react-router-dom\"; // eslint-disable-next-line\n\nimport css from \"../css/storeGrid.css\";\n\nconst StoreGrid = ({\n  getProducts,\n  products,\n  categories\n}) => {\n  _s();\n\n  // anytime categories state has been loaded by a user making selections from the checkbox, the getCategory fetch call will be made.\n  useEffect(() => {\n    getProducts(); // eslint-disable-next-line\n  }, []);\n  const broducts = [{\n    title: \"thing\",\n    price: 5,\n    id: 3\n  }];\n\n  const submitHandler = id => {\n    console.log(\"clicked\");\n  }; // this function here that will take the products, match them to categories, then render out those sorted products\n\n\n  const sortedProducts = () => {\n    const sortedProducts = products.filter(item => categories.includes(item.category));\n    return sortedProducts.map(item => {\n      return /*#__PURE__*/_jsxDEV(Link, {\n        to: `/products/${item.id}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: submitHandler,\n          className: \"col col-4 product\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.image,\n            alt: item.image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [\"$\", item.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  const renderImages = () => {\n    return broducts.map(item => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: submitHandler,\n        className: \"col col-4 product\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/products/${item.id}`,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.image,\n            alt: item.image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [\"$\", item.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: categories.length === 0 ? renderImages() : sortedProducts()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StoreGrid, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = StoreGrid;\n\nconst mapStateToProps = state => {\n  return {\n    products: state.products,\n    categories: state.categories\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getProducts\n})(StoreGrid);\n\nvar _c;\n\n$RefreshReg$(_c, \"StoreGrid\");","map":{"version":3,"sources":["/Users/adamwatt/Desktop/JavaScriptProjects/React-practice/e-commerce/src/components/StoreGrid.js"],"names":["React","useEffect","connect","getProducts","Link","css","StoreGrid","products","categories","broducts","title","price","id","submitHandler","console","log","sortedProducts","filter","item","includes","category","map","image","renderImages","length","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getProducts } from \"../actions\";\nimport { Link } from \"react-router-dom\";\n// eslint-disable-next-line\nimport css from \"../css/storeGrid.css\";\n\nconst StoreGrid = ({ getProducts, products, categories }) => {\n  // anytime categories state has been loaded by a user making selections from the checkbox, the getCategory fetch call will be made.\n  useEffect(() => {\n    getProducts();\n    // eslint-disable-next-line\n  }, []);\n\n  const broducts = [\n    {\n      title: \"thing\",\n      price: 5,\n      id: 3,\n    },\n  ];\n\n  const submitHandler = (id) => {\n    console.log(\"clicked\");\n  };\n\n  // this function here that will take the products, match them to categories, then render out those sorted products\n  const sortedProducts = () => {\n    const sortedProducts = products.filter((item) =>\n      categories.includes(item.category)\n    );\n    return sortedProducts.map((item) => {\n      return (\n        <Link to={`/products/${item.id}`}>\n          <div\n            onClick={submitHandler}\n            className='col col-4 product'\n            key={item.id}>\n            <img src={item.image} alt={item.image} />\n            <h6>{item.title}</h6>\n            <h5>${item.price}</h5>\n          </div>\n        </Link>\n      );\n    });\n  };\n\n  const renderImages = () => {\n    return broducts.map((item) => {\n      return (\n        <div\n          onClick={submitHandler}\n          className='col col-4 product'\n          key={item.id}>\n          <Link to={`/products/${item.id}`}>\n            <img src={item.image} alt={item.image} />\n            <h6>{item.title}</h6>\n            <h5>${item.price}</h5>\n          </Link>\n        </div>\n      );\n    });\n  };\n\n  return (\n    <div className='container'>\n      <div className='row'>\n        {categories.length === 0 ? renderImages() : sortedProducts()}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    products: state.products,\n    categories: state.categories,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getProducts,\n})(StoreGrid);\n"]},"metadata":{},"sourceType":"module"}