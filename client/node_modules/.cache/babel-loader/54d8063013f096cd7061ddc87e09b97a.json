{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/adamwatt/Desktop/JavaScriptProjects/React-practice/e-commerce/src/components/StoreGrid.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getProducts } from \"../actions\"; // eslint-disable-next-line\n\nimport css from \"../css/storeGrid.css\";\n\nconst StoreGrid = ({\n  getProducts,\n  products,\n  categories\n}) => {\n  _s();\n\n  // anytime categories state has been loaded by a user making selections from the checkbox, the getCategory fetch call will be made.\n  useEffect(() => {\n    getProducts(); // eslint-disable-next-line\n  }, []); //* creating a function here that will take the products, match them to categories, then render out those sorted products\n\n  const sortedProducts = () => {\n    //* this seems to filter products correctly by the correctly chosen categories\n    const sortedProducts = products.filter(item => categories.includes(item.category));\n    return sortedProducts.map(item => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col col-4 product\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.image,\n          alt: item.image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [\"$\", item.price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  const renderImages = () => {\n    return products.map(item => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col col-4 product\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.image,\n          alt: item.image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [\"$\", item.price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: categories.length === 0 ? renderImages() : sortedProducts()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StoreGrid, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = StoreGrid;\n\nconst mapStateToProps = state => {\n  return {\n    products: state.products,\n    categories: state.categories\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getProducts\n})(StoreGrid);\n\nvar _c;\n\n$RefreshReg$(_c, \"StoreGrid\");","map":{"version":3,"sources":["/Users/adamwatt/Desktop/JavaScriptProjects/React-practice/e-commerce/src/components/StoreGrid.js"],"names":["React","useEffect","connect","getProducts","css","StoreGrid","products","categories","sortedProducts","filter","item","includes","category","map","image","title","price","id","renderImages","length","mapStateToProps","state"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,YAA5B,C,CAEA;;AACA,OAAOC,GAAP,MAAgB,sBAAhB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEF,EAAAA,WAAF;AAAeG,EAAAA,QAAf;AAAyBC,EAAAA;AAAzB,CAAD,KAA2C;AAAA;;AAC3D;AACAN,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,WAAW,GADG,CAGd;AACD,GAJQ,EAIN,EAJM,CAAT,CAF2D,CAQ3D;;AAEA,QAAMK,cAAc,GAAG,MAAM;AAC3B;AACA,UAAMA,cAAc,GAAGF,QAAQ,CAACG,MAAT,CAAiBC,IAAD,IACrCH,UAAU,CAACI,QAAX,CAAoBD,IAAI,CAACE,QAAzB,CADqB,CAAvB;AAGA,WAAOJ,cAAc,CAACK,GAAf,CAAoBH,IAAD,IAAU;AAClC,0BACE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,gCACE;AAAK,UAAA,GAAG,EAAEA,IAAI,CAACI,KAAf;AAAsB,UAAA,GAAG,EAAEJ,IAAI,CAACI;AAAhC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAKJ,IAAI,CAACK;AAAV;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA,0BAAML,IAAI,CAACM,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA,SAAwCN,IAAI,CAACO,EAA7C;AAAA;AAAA;AAAA;AAAA,cADF;AAOD,KARM,CAAP;AASD,GAdD;;AAgBA,QAAMC,YAAY,GAAG,MAAM;AACzB,WAAOZ,QAAQ,CAACO,GAAT,CAAcH,IAAD,IAAU;AAC5B,0BACE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,gCACE;AAAK,UAAA,GAAG,EAAEA,IAAI,CAACI,KAAf;AAAsB,UAAA,GAAG,EAAEJ,IAAI,CAACI;AAAhC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAKJ,IAAI,CAACK;AAAV;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA,0BAAML,IAAI,CAACM,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA,SAAwCN,IAAI,CAACO,EAA7C;AAAA;AAAA;AAAA;AAAA,cADF;AAOD,KARM,CAAP;AASD,GAVD;;AAYA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,gBACGV,UAAU,CAACY,MAAX,KAAsB,CAAtB,GAA0BD,YAAY,EAAtC,GAA2CV,cAAc;AAD5D;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CA7CD;;GAAMH,S;;KAAAA,S;;AA+CN,MAAMe,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLf,IAAAA,QAAQ,EAAEe,KAAK,CAACf,QADX;AAELC,IAAAA,UAAU,EAAEc,KAAK,CAACd;AAFb,GAAP;AAID,CALD;;AAOA,eAAeL,OAAO,CAACkB,eAAD,EAAkB;AACtCjB,EAAAA;AADsC,CAAlB,CAAP,CAEZE,SAFY,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getProducts } from \"../actions\";\n\n// eslint-disable-next-line\nimport css from \"../css/storeGrid.css\";\n\nconst StoreGrid = ({ getProducts, products, categories }) => {\n  // anytime categories state has been loaded by a user making selections from the checkbox, the getCategory fetch call will be made.\n  useEffect(() => {\n    getProducts();\n\n    // eslint-disable-next-line\n  }, []);\n\n  //* creating a function here that will take the products, match them to categories, then render out those sorted products\n\n  const sortedProducts = () => {\n    //* this seems to filter products correctly by the correctly chosen categories\n    const sortedProducts = products.filter((item) =>\n      categories.includes(item.category)\n    );\n    return sortedProducts.map((item) => {\n      return (\n        <div className='col col-4 product' key={item.id}>\n          <img src={item.image} alt={item.image} />\n          <h6>{item.title}</h6>\n          <h5>${item.price}</h5>\n        </div>\n      );\n    });\n  };\n\n  const renderImages = () => {\n    return products.map((item) => {\n      return (\n        <div className='col col-4 product' key={item.id}>\n          <img src={item.image} alt={item.image} />\n          <h6>{item.title}</h6>\n          <h5>${item.price}</h5>\n        </div>\n      );\n    });\n  };\n\n  return (\n    <div className='container'>\n      <div className='row'>\n        {categories.length === 0 ? renderImages() : sortedProducts()}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    products: state.products,\n    categories: state.categories,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getProducts,\n})(StoreGrid);\n"]},"metadata":{},"sourceType":"module"}