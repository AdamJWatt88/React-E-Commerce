{"ast":null,"code":"import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { FETCH_SINGLE_PRODUCT, FETCH_PRODUCTS, FETCH_CATEGORY, SET_SLIDE_MENU, CATEGORY_SELECTIONS, CLEAR_PRODUCT, ADD_CART_ITEM, REMOVE_CART_ITEM, CART_ITEM_CHECK, CART_ERROR, UPDATE_QUANTITY, REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, REMOVE_ALERT, SET_ALERT, CLEAR_ERRORS, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT } from \"../types\"; //open and close the slideMenu if true or false\n\nexport const showSlideMenu = () => {\n  return {\n    type: SET_SLIDE_MENU\n  };\n}; //get all products\n\nexport const getProducts = categories => {\n  return async dispatch => {\n    const response = await fetch(\"https://fakestoreapi.com/products\", headers);\n    const data = await response.json();\n    dispatch({\n      type: FETCH_PRODUCTS,\n      payload: data\n    });\n    dispatch({\n      type: CLEAR_PRODUCT\n    });\n  };\n}; // fetch products by category\n\nexport const getCategory = category => {\n  return async dispatch => {\n    const response = await fetch(`https://fakestoreapi.com/products/category/${category}`);\n    const data = await response.json();\n    dispatch({\n      type: FETCH_CATEGORY,\n      payload: data\n    });\n  };\n}; // fetch a single product by its id\n\nexport const getSingleProduct = id => {\n  return async dispatch => {\n    const response = await fetch(`https://fakestoreapi.com/products/${id}`);\n    const data = await response.json();\n    dispatch({\n      type: FETCH_SINGLE_PRODUCT,\n      payload: data\n    });\n  };\n}; //map over the formProps obejct being passed in here and take every category value then assign an array made of those values to payload value\n\nexport const categorySelection = formProps => {\n  // only add formProps value to the array if not null. if a value is null then remove it\n  const formValues = Object.values(formProps).filter(item => item !== null);\n  return {\n    type: CATEGORY_SELECTIONS,\n    payload: formValues\n  };\n}; //adds a product to the cartItems state\n\nexport const addProductToCart = cartItem => {\n  return async dispatch => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    try {\n      const res = axios.post(\"/api/cart\", cartItem, config);\n      dispatch({\n        type: ADD_CART_ITEM,\n        payload: cartItem\n      });\n    } catch (err) {\n      dispatch({\n        type: CART_ERROR,\n        payload: err.response.msg\n      });\n    }\n  };\n}; //remove a product from the cartItems state\n\nexport const removeProductFromCart = cartItem => {\n  return {\n    type: REMOVE_CART_ITEM,\n    payload: +cartItem\n  };\n};\nexport const updateQuantity = ({\n  id,\n  quantity\n}) => {\n  return {\n    type: UPDATE_QUANTITY,\n    payload: {\n      id,\n      quantity\n    }\n  };\n}; //checks if an item is already inside the cartItems state by matching the id\n\nexport const isItemInCart = () => {\n  alert(\"That item is already in cart\");\n  return {\n    type: CART_ITEM_CHECK\n  };\n}; // Load user\n\nexport const loadUser = () => {\n  return async dispatch => {\n    setAuthToken(localStorage.token);\n\n    try {\n      const res = await axios.get(\"/api/auth\");\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: AUTH_ERROR\n      });\n    }\n  };\n}; // Register user\n\nexport const registerUser = user => {\n  return async dispatch => {\n    const config = {\n      header: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    try {\n      const res = await axios.post(\"/api/users\", user, config);\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      });\n      loadUser();\n    } catch (err) {\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: err.response.data.msg\n      });\n    }\n  };\n}; // Login user\n\nexport const login = user => {\n  return async dispatch => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    try {\n      const res = await axios.post(\"/api/auth\", user, config);\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data\n      });\n      loadUser();\n    } catch (err) {\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: err.response.data.msg\n      });\n    }\n  };\n}; // Logout User\n\nexport const logout = () => {\n  return {\n    type: LOGOUT\n  };\n}; // Set alert\n\nexport const setAlert = (msg, type, timeout = 5000) => {\n  const id = uuidv4();\n  return async dispatch => {\n    dispatch({\n      type: SET_ALERT,\n      payload: {\n        msg,\n        type,\n        id\n      }\n    });\n    setTimeout(() => dispatch({\n      type: REMOVE_ALERT,\n      payload: id\n    }), timeout);\n  };\n};\nexport const clearErrors = () => {\n  return {\n    type: CLEAR_ERRORS\n  };\n};","map":{"version":3,"sources":["/Users/adamwatt/Desktop/JavaScriptProjects/React-practice/e-commerce/client/src/actions/index.js"],"names":["axios","setAuthToken","v4","uuidv4","FETCH_SINGLE_PRODUCT","FETCH_PRODUCTS","FETCH_CATEGORY","SET_SLIDE_MENU","CATEGORY_SELECTIONS","CLEAR_PRODUCT","ADD_CART_ITEM","REMOVE_CART_ITEM","CART_ITEM_CHECK","CART_ERROR","UPDATE_QUANTITY","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","REMOVE_ALERT","SET_ALERT","CLEAR_ERRORS","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","showSlideMenu","type","getProducts","categories","dispatch","response","fetch","headers","data","json","payload","getCategory","category","getSingleProduct","id","categorySelection","formProps","formValues","Object","values","filter","item","addProductToCart","cartItem","config","res","post","err","msg","removeProductFromCart","updateQuantity","quantity","isItemInCart","alert","loadUser","localStorage","token","get","registerUser","user","header","login","logout","setAlert","timeout","setTimeout","clearErrors"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport {\n  FETCH_SINGLE_PRODUCT,\n  FETCH_PRODUCTS,\n  FETCH_CATEGORY,\n  SET_SLIDE_MENU,\n  CATEGORY_SELECTIONS,\n  CLEAR_PRODUCT,\n  ADD_CART_ITEM,\n  REMOVE_CART_ITEM,\n  CART_ITEM_CHECK,\n  CART_ERROR,\n  UPDATE_QUANTITY,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  REMOVE_ALERT,\n  SET_ALERT,\n  CLEAR_ERRORS,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n} from \"../types\";\n\n//open and close the slideMenu if true or false\nexport const showSlideMenu = () => {\n  return {\n    type: SET_SLIDE_MENU,\n  };\n};\n\n//get all products\nexport const getProducts = (categories) => {\n  return async (dispatch) => {\n    const response = await fetch(\n      \"https://fakestoreapi.com/products\",\n      (headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n      })\n    );\n\n    const data = await response.json();\n\n    dispatch({\n      type: FETCH_PRODUCTS,\n      payload: data,\n    });\n    dispatch({\n      type: CLEAR_PRODUCT,\n    });\n  };\n};\n\n// fetch products by category\nexport const getCategory = (category) => {\n  return async (dispatch) => {\n    const response = await fetch(\n      `https://fakestoreapi.com/products/category/${category}`\n    );\n    const data = await response.json();\n\n    dispatch({\n      type: FETCH_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\n// fetch a single product by its id\nexport const getSingleProduct = (id) => {\n  return async (dispatch) => {\n    const response = await fetch(`https://fakestoreapi.com/products/${id}`);\n    const data = await response.json();\n\n    dispatch({\n      type: FETCH_SINGLE_PRODUCT,\n      payload: data,\n    });\n  };\n};\n\n//map over the formProps obejct being passed in here and take every category value then assign an array made of those values to payload value\nexport const categorySelection = (formProps) => {\n  // only add formProps value to the array if not null. if a value is null then remove it\n  const formValues = Object.values(formProps).filter((item) => item !== null);\n\n  return {\n    type: CATEGORY_SELECTIONS,\n    payload: formValues,\n  };\n};\n\n//adds a product to the cartItems state\nexport const addProductToCart = (cartItem) => {\n  return async (dispatch) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    try {\n      const res = axios.post(\"/api/cart\", cartItem, config);\n\n      dispatch({\n        type: ADD_CART_ITEM,\n        payload: cartItem,\n      });\n    } catch (err) {\n      dispatch({\n        type: CART_ERROR,\n        payload: err.response.msg,\n      });\n    }\n  };\n};\n\n//remove a product from the cartItems state\nexport const removeProductFromCart = (cartItem) => {\n  return {\n    type: REMOVE_CART_ITEM,\n    payload: +cartItem,\n  };\n};\n\nexport const updateQuantity = ({ id, quantity }) => {\n  return {\n    type: UPDATE_QUANTITY,\n    payload: { id, quantity },\n  };\n};\n\n//checks if an item is already inside the cartItems state by matching the id\nexport const isItemInCart = () => {\n  alert(\"That item is already in cart\");\n  return {\n    type: CART_ITEM_CHECK,\n  };\n};\n\n// Load user\nexport const loadUser = () => {\n  return async (dispatch) => {\n    setAuthToken(localStorage.token);\n\n    try {\n      const res = await axios.get(\"/api/auth\");\n\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data,\n      });\n    } catch (err) {\n      dispatch({ type: AUTH_ERROR });\n    }\n  };\n};\n\n// Register user\nexport const registerUser = (user) => {\n  return async (dispatch) => {\n    const config = {\n      header: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    try {\n      const res = await axios.post(\"/api/users\", user, config);\n\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data,\n      });\n\n      loadUser();\n    } catch (err) {\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: err.response.data.msg,\n      });\n    }\n  };\n};\n\n// Login user\nexport const login = (user) => {\n  return async (dispatch) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    try {\n      const res = await axios.post(\"/api/auth\", user, config);\n\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data,\n      });\n\n      loadUser();\n    } catch (err) {\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: err.response.data.msg,\n      });\n    }\n  };\n};\n\n// Logout User\nexport const logout = () => {\n  return {\n    type: LOGOUT,\n  };\n};\n\n// Set alert\nexport const setAlert = (msg, type, timeout = 5000) => {\n  const id = uuidv4();\n  return async (dispatch) => {\n    dispatch({\n      type: SET_ALERT,\n      payload: { msg, type, id },\n    });\n\n    setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), timeout);\n  };\n};\n\nexport const clearErrors = () => {\n  return {\n    type: CLEAR_ERRORS,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}