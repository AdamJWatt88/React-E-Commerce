{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/adamwatt/Desktop/JavaScriptProjects/React-practice/e-commerce/src/components/StoreGrid.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\n\nconst StoreGrid = () => {\n  _s();\n\n  // after this logic works i want to move it out into Redux store and import here as props\n  const [images, setImage] = useState([]);\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/photos/\").then(response => response.json()).then(data => {\n      //this correctly filters all photos with the albumId of 1 and sets to a new array named albumArr. i think i now need to map that albumArr and set it to images state\n      const albumArr = data.filter(album => album.albumId === 1);\n      const newArr = albumArr.map(photo => {\n        return {\n          image: photo.thumbnailUrl,\n          id: photo.id\n        };\n      });\n      console.log(newArr);\n      setImage(newArr); // trying to map over the filtered array and set the state to photothumbnail and id\n      // albumArr.map((photo) => {\n      //   return setImage({ image: photo.thumbnailUrl, id: photo.id });\n      // });\n      //   this map sets only the last image from the api call\n      // data.map((photo) =>\n      //   setImage({ image: photo.thumbnailUrl, id: photo.id })\n      // );\n    });\n  }, []);\n\n  const renderImages = () => {\n    images.map(photo => {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: photo.image,\n        alt: photo.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 14\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: renderImages()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 10\n  }, this);\n};\n\n_s(StoreGrid, \"1anmnu7NZSx+wAbegZkk1IJukQI=\");\n\n_c = StoreGrid;\nexport default StoreGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"StoreGrid\");","map":{"version":3,"sources":["/Users/adamwatt/Desktop/JavaScriptProjects/React-practice/e-commerce/src/components/StoreGrid.js"],"names":["React","useState","useEffect","StoreGrid","images","setImage","fetch","then","response","json","data","albumArr","filter","album","albumId","newArr","map","photo","image","thumbnailUrl","id","console","log","renderImages"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB;AACA,QAAM,CAACC,MAAD,EAASC,QAAT,IAAqBJ,QAAQ,CAAC,EAAD,CAAnC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,KAAK,CAAC,8CAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESG,IAAD,IAAU;AACd;AAEA,YAAMC,QAAQ,GAAGD,IAAI,CAACE,MAAL,CAAaC,KAAD,IAAWA,KAAK,CAACC,OAAN,KAAkB,CAAzC,CAAjB;AAEA,YAAMC,MAAM,GAAGJ,QAAQ,CAACK,GAAT,CAAcC,KAAD,IAAW;AACrC,eAAO;AAAEC,UAAAA,KAAK,EAAED,KAAK,CAACE,YAAf;AAA6BC,UAAAA,EAAE,EAAEH,KAAK,CAACG;AAAvC,SAAP;AACD,OAFc,CAAf;AAGAC,MAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;AACAV,MAAAA,QAAQ,CAACU,MAAD,CAAR,CATc,CAWd;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACD,KAtBH;AAuBD,GAxBQ,EAwBN,EAxBM,CAAT;;AAyBA,QAAMQ,YAAY,GAAG,MAAM;AACzBnB,IAAAA,MAAM,CAACY,GAAP,CAAYC,KAAD,IAAW;AACpB,0BAAO;AAAK,QAAA,GAAG,EAAEA,KAAK,CAACC,KAAhB;AAAuB,QAAA,GAAG,EAAED,KAAK,CAACC;AAAlC;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFD;AAGD,GAJD;;AAMA,sBAAO;AAAA,cAAMK,YAAY;AAAlB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CApCD;;GAAMpB,S;;KAAAA,S;AAsCN,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst StoreGrid = () => {\n  // after this logic works i want to move it out into Redux store and import here as props\n  const [images, setImage] = useState([]);\n\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/photos/\")\n      .then((response) => response.json())\n      .then((data) => {\n        //this correctly filters all photos with the albumId of 1 and sets to a new array named albumArr. i think i now need to map that albumArr and set it to images state\n\n        const albumArr = data.filter((album) => album.albumId === 1);\n\n        const newArr = albumArr.map((photo) => {\n          return { image: photo.thumbnailUrl, id: photo.id };\n        });\n        console.log(newArr);\n        setImage(newArr);\n\n        // trying to map over the filtered array and set the state to photothumbnail and id\n        // albumArr.map((photo) => {\n        //   return setImage({ image: photo.thumbnailUrl, id: photo.id });\n        // });\n\n        //   this map sets only the last image from the api call\n        // data.map((photo) =>\n        //   setImage({ image: photo.thumbnailUrl, id: photo.id })\n        // );\n      });\n  }, []);\n  const renderImages = () => {\n    images.map((photo) => {\n      return <img src={photo.image} alt={photo.image} />;\n    });\n  };\n\n  return <div>{renderImages()}</div>;\n};\n\nexport default StoreGrid;\n"]},"metadata":{},"sourceType":"module"}