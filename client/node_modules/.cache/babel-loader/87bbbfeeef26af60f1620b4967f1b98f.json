{"ast":null,"code":"import { ADD_CART_ITEM, REMOVE_CART_ITEM, UPDATE_QUANTITY, CART_ITEM_CHECK } from \"../types\";\n\nconst cartItemReducer = (state = [], action) => {\n  switch (action.type) {\n    case ADD_CART_ITEM:\n      return [...state, action.payload];\n\n    case REMOVE_CART_ITEM:\n      return state.filter(item => item.id !== action.payload);\n\n    case CART_ITEM_CHECK:\n      return state;\n\n    case UPDATE_QUANTITY:\n      //!action.payload currently coming in is the quantity number coming in. it can't be used to match to item.id\n      //? i want to add into the object i find { quantity: action.payload }\n      //? something like\n      //?  state\n      //? .map( item => ( {..item, quantity: action.payload} ) )\n      const checkQuantity = item => item.id === 1; //! this returns a new object into the state array with just the quantity key\n      // return state.some(checkQuantity) ? [...state, { quantity: action.payload }] : state;\n      //! this returns state.some().map is not a function\n      // return state\n      //   .some(checkQuantity)\n      //   .map((item) => ({ ...item, quantity: action.payload }));\n      // return state.find((item) => {\n      //   if (item.id === 1) {\n      //     return [...state, { ...item, quantity: action.payload }];\n      //   }\n      // });\n      //! this causes errors\n      // return state.find((item) => item.id === 1);\n\n\n      return [...state].map(item => {\n        if (item.id === 1) {\n          return { ...item,\n            quantity: action.payload\n          };\n        }\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default cartItemReducer;","map":{"version":3,"sources":["/Users/adamwatt/Desktop/JavaScriptProjects/React-practice/e-commerce/src/reducers/cartItemReducer.js"],"names":["ADD_CART_ITEM","REMOVE_CART_ITEM","UPDATE_QUANTITY","CART_ITEM_CHECK","cartItemReducer","state","action","type","payload","filter","item","id","checkQuantity","map","quantity"],"mappings":"AAAA,SACEA,aADF,EAEEC,gBAFF,EAGEC,eAHF,EAIEC,eAJF,QAKO,UALP;;AAOA,MAAMC,eAAe,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,aAAL;AACE,aAAO,CAAC,GAAGK,KAAJ,EAAWC,MAAM,CAACE,OAAlB,CAAP;;AACF,SAAKP,gBAAL;AACE,aAAOI,KAAK,CAACI,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACE,OAA1C,CAAP;;AACF,SAAKL,eAAL;AACE,aAAOE,KAAP;;AACF,SAAKH,eAAL;AACE;AACA;AACA;AACA;AACA;AACA,YAAMU,aAAa,GAAIF,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAY,CAA5C,CANF,CAOE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,aAAO,CAAC,GAAGN,KAAJ,EAAWQ,GAAX,CAAgBH,IAAD,IAAU;AAC9B,YAAIA,IAAI,CAACC,EAAL,KAAY,CAAhB,EAAmB;AACjB,iBAAO,EAAE,GAAGD,IAAL;AAAWI,YAAAA,QAAQ,EAAER,MAAM,CAACE;AAA5B,WAAP;AACD;AACF,OAJM,CAAP;;AAKF;AACE,aAAOH,KAAP;AAjCJ;AAmCD,CApCD;;AAsCA,eAAeD,eAAf","sourcesContent":["import {\n  ADD_CART_ITEM,\n  REMOVE_CART_ITEM,\n  UPDATE_QUANTITY,\n  CART_ITEM_CHECK,\n} from \"../types\";\n\nconst cartItemReducer = (state = [], action) => {\n  switch (action.type) {\n    case ADD_CART_ITEM:\n      return [...state, action.payload];\n    case REMOVE_CART_ITEM:\n      return state.filter((item) => item.id !== action.payload);\n    case CART_ITEM_CHECK:\n      return state;\n    case UPDATE_QUANTITY:\n      //!action.payload currently coming in is the quantity number coming in. it can't be used to match to item.id\n      //? i want to add into the object i find { quantity: action.payload }\n      //? something like\n      //?  state\n      //? .map( item => ( {..item, quantity: action.payload} ) )\n      const checkQuantity = (item) => item.id === 1;\n      //! this returns a new object into the state array with just the quantity key\n      // return state.some(checkQuantity) ? [...state, { quantity: action.payload }] : state;\n      //! this returns state.some().map is not a function\n      // return state\n      //   .some(checkQuantity)\n      //   .map((item) => ({ ...item, quantity: action.payload }));\n      // return state.find((item) => {\n      //   if (item.id === 1) {\n      //     return [...state, { ...item, quantity: action.payload }];\n      //   }\n      // });\n      //! this causes errors\n      // return state.find((item) => item.id === 1);\n      return [...state].map((item) => {\n        if (item.id === 1) {\n          return { ...item, quantity: action.payload };\n        }\n      });\n    default:\n      return state;\n  }\n};\n\nexport default cartItemReducer;\n"]},"metadata":{},"sourceType":"module"}